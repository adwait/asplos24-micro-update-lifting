$date
	Tue Jan 23 15:27:18 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tlb_tb $end
$var wire 32 ! cdata [31:0] $end
$var wire 1 " de_io_flush_i $end
$var wire 1 # de_io_lu_access_i $end
$var wire 1 $ de_io_lu_asid_i $end
$var wire 32 % de_io_lu_vaddr_i [31:0] $end
$var wire 31 & tdata [30:0] $end
$var wire 32 ' de_io_vaddr_to_be_flushed_i [31:0] $end
$var wire 63 ( de_io_update_i [62:0] $end
$var wire 1 ) de_io_lu_is_4M_o $end
$var wire 1 * de_io_lu_hit_o $end
$var wire 32 + de_io_lu_content_o [31:0] $end
$var wire 1 , de_io_asid_to_be_flushed_i $end
$var reg 32 - CLK_CYCLE [31:0] $end
$var reg 9 . asid [8:0] $end
$var reg 2 / choice [1:0] $end
$var reg 1 0 clk $end
$var reg 32 1 edata [31:0] $end
$var reg 1 2 reset $end
$var reg 1 , tb_io_asid_to_be_flushed_i $end
$var reg 1 3 tb_io_flush_i $end
$var reg 1 4 tb_io_lu_access_i $end
$var reg 1 5 tb_io_lu_asid_i $end
$var reg 32 6 tb_io_lu_vaddr_i [31:0] $end
$var reg 63 7 tb_io_update_i [62:0] $end
$var reg 32 8 tb_io_vaddr_to_be_flushed_i [31:0] $end
$var reg 20 9 vpn [19:0] $end
$var integer 32 : i [31:0] $end
$var integer 32 ; seed [31:0] $end
$scope module tlb_i $end
$var wire 1 , asid_to_be_flushed_i $end
$var wire 1 < asid_to_be_flushed_is0 $end
$var wire 1 0 clk_i $end
$var wire 1 " flush_i $end
$var wire 1 # lu_access_i $end
$var wire 1 $ lu_asid_i $end
$var wire 32 = lu_vaddr_i [31:0] $end
$var wire 128 > port_content_q_o [127:0] $end
$var wire 4 ? port_replace_en_o [3:0] $end
$var wire 124 @ port_tags_q_o [123:0] $end
$var wire 1 2 rst_ni $end
$var wire 63 A update_i [62:0] $end
$var wire 32 B vaddr_to_be_flushed_i [31:0] $end
$var wire 1 C vaddr_to_be_flushed_is0 $end
$var wire 31 D tdata [30:0] $end
$var wire 31 E tags_q_3 [30:0] $end
$var wire 31 F tags_q_2 [30:0] $end
$var wire 31 G tags_q_1 [30:0] $end
$var wire 31 H tags_q_0 [30:0] $end
$var wire 32 I content_q_3 [31:0] $end
$var wire 32 J content_q_2 [31:0] $end
$var wire 32 K content_q_1 [31:0] $end
$var wire 32 L content_q_0 [31:0] $end
$var wire 32 M cdata [31:0] $end
$var reg 128 N content_n [127:0] $end
$var reg 128 O content_q [127:0] $end
$var reg 32 P lu_content_o [31:0] $end
$var reg 4 Q lu_hit [3:0] $end
$var reg 1 * lu_hit_o $end
$var reg 1 ) lu_is_4M_o $end
$var reg 6 R plru_tree_n [5:0] $end
$var reg 6 S plru_tree_q [5:0] $end
$var reg 4 T replace_en [3:0] $end
$var reg 124 U tags_n [123:0] $end
$var reg 124 V tags_q [123:0] $end
$var reg 4 W vaddr_vpn0_match [3:0] $end
$var reg 4 X vaddr_vpn1_match [3:0] $end
$var reg 10 Y vpn0 [9:0] $end
$var reg 10 Z vpn1 [9:0] $end
$scope function countSetBits $end
$var reg 32 [ count [31:0] $end
$var reg 32 \ countSetBits [31:0] $end
$var reg 4 ] vector [3:0] $end
$scope begin sv2v_autoblock_9 $end
$var integer 32 ^ idx [31:0] $end
$upscope $end
$upscope $end
$scope begin p_assertions $end
$upscope $end
$scope begin plru_replacement $end
$scope begin sv2v_autoblock_3 $end
$var reg 32 _ i [31:0] $end
$scope begin sv2v_autoblock_4 $end
$var reg 32 ` idx_base [31:0] $end
$var reg 32 a new_index [31:0] $end
$var reg 32 b shift [31:0] $end
$scope begin sv2v_autoblock_5 $end
$var reg 32 c lvl [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin sv2v_autoblock_6 $end
$var reg 32 d i [31:0] $end
$scope begin sv2v_autoblock_7 $end
$var reg 1 e en $end
$var reg 32 f idx_base [31:0] $end
$var reg 32 g new_index [31:0] $end
$var reg 32 h shift [31:0] $end
$scope begin sv2v_autoblock_8 $end
$var reg 32 i lvl [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin translation $end
$scope begin sv2v_autoblock_1 $end
$var reg 32 j i [31:0] $end
$upscope $end
$upscope $end
$scope begin update_flush $end
$scope begin sv2v_autoblock_2 $end
$var reg 32 k i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope task make_tlb_flush $end
$var reg 9 l asid [8:0] $end
$var reg 20 m vpn [19:0] $end
$upscope $end
$scope task make_tlb_lookup $end
$var reg 9 n asid [8:0] $end
$var reg 20 o vpn [19:0] $end
$upscope $end
$scope task make_tlb_update $end
$var reg 9 p asid [8:0] $end
$var reg 32 q entry_data [31:0] $end
$var reg 20 r vpn [19:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
xe
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1 M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
xC
bx B
bx A
bx @
bx ?
bx >
bx =
x<
b1011110111 ;
bx :
bx 9
bx 8
bx 7
bx 6
x5
x4
x3
12
bx 1
10
bx /
bx .
b0 -
x,
bx +
x*
x)
bx (
bx '
bx01 &
bx %
x$
x#
x"
bx !
$end
#10
00
#20
b1 ?
b1 T
b1 g
b1 h
b1 f
b10 i
0e
b100 d
b100 _
b0 R
b0 L
b0 K
b0 J
b0 I
b100 k
b0 N
b0 U
b100 j
0)
b0 +
b0 P
0*
b0 Q
b0 H
b0 G
b0 F
b0 E
b1 -
b0 S
b0 >
b0 O
b0 @
b0 V
10
02
#30
00
#40
b10 -
10
#50
00
#60
b11 -
10
b10001010010001110110001000010100 !
b10001010010001110110001000010100 1
b11111110110000000110 9
b1010010001110110000101011101 ;
b11111111011000000011001 &
b1 .
12
#70
00
#80
b10001010010001110110001000010100 L
b11111111011000000011001 H
b10001010010001110110001000010100 >
b10001010010001110110001000010100 O
b11111111011000000011001 @
b11111111011000000011001 V
b100 -
b1010010001110110001000010100 D
1C
1<
b100 j
b0 Z
b0 Y
b10001010010001110110001000010100 N
b11111111011000000011001 U
b1110 X
b1110 W
b100 k
b11111111011000000011001 M
10
b1011100011101001000111110111000 !
b1011100011101001000111110111000 1
b11000100001000110000001 &
b10001000010001100000 9
b0 '
b0 8
b0 B
0,
0"
03
0$
05
b0 %
b0 =
b0 6
b101111111011000000011000000000110001010010001110110001000010100 (
b101111111011000000011000000000110001010010001110110001000010100 7
b101111111011000000011000000000110001010010001110110001000010100 A
b10001010010001110110001000010100 q
b1 p
b11111110110000000110 r
b0 /
b11011100011101001000110101011000 ;
b0 :
#90
00
#100
b100 j
b11111111011000000011000 H
b11111111011000000011000 @
b11111111011000000011000 V
b101 -
b0 D
0C
0<
b0 X
b0 W
b11111111011000000011000 U
b100 k
b1 M
10
b1100010110011111010100111000101 !
b1100010110011111010100111000101 1
b10010010000100111110001 &
b100100001001111100 9
b10001000010001100000000000000000 '
b10001000010001100000000000000000 8
b10001000010001100000000000000000 B
1,
1"
13
b0 (
b0 7
b0 A
b1 l
b10001000010001100000 m
b11 /
b11100010110011111010011000101111 ;
b1 :
#110
00
#120
b110 -
b100 k
10
b10000111001000101010100000001110 !
b10000111001000101010100000001110 1
b10100010101101001110001 &
b1000101011010011100 9
b100100001001111100000000000000 '
b100100001001111100000000000000 8
b100100001001111100000000000000 B
b100100001001111100 m
b111001000101010011000010010 ;
b10 :
#130
00
#140
b111 -
1C
1<
b1110 X
b1110 W
b100 k
b100 j
b100010101 Z
b1010011100 Y
10
b11011110001110100100100010111100 !
b11011110001110100100100010111100 1
b11001111101000101011001 &
b10011111010001010110 9
b0 '
b0 8
b0 B
0,
0"
03
1$
15
b1000101011010011100000000000000 %
b1000101011010011100000000000000 =
b1000101011010011100000000000000 6
b1 n
b1000101011010011100 o
b10 /
b1011110001110100100011011110001 ;
b11 :
#150
00
#160
b1000 -
b100 j
b1001111101 Z
b1010110 Y
10
b10110010100000000000111001100101 !
b10110010100000000000111001100101 1
b10001100000110110010101 &
b11000001101100101 9
b10011111010001010110000000000000 %
b10011111010001010110000000000000 =
b10011111010001010110000000000000 6
b10011111010001010110 o
b110010100000000000110101111100 ;
b100 :
#170
00
#180
b1001 -
b100 k
b100 j
b0 Z
b0 Y
10
b110101100111001100000001 !
b110101100111001100000001 1
b11010011000001001111001 &
b10100110000010011110 9
1"
13
0$
05
b0 %
b0 =
b0 6
b0 l
b0 m
b1 /
b10000000110101100111000000100011 ;
b101 :
#190
00
#200
b1010 -
0C
b0 X
b0 W
b100 k
0<
10
b100100000010100100110101001000 !
b100100000010100100110101001000 1
b10001001001111011010001 &
b10010011110110100 9
b10100110000010011110000000000000 '
b10100110000010011110000000000000 8
b10100110000010011110000000000000 B
1,
b1 l
b10100110000010011110 m
b11 /
b10100100000010100100101000010110 ;
b110 :
#210
00
#220
b100100000010100100110101001000 L
b100 j
b10001001001111011010001 H
b100100000010100100110101001000 >
b100100000010100100110101001000 O
b10001001001111011010001 @
b10001001001111011010001 V
b1011 -
b100100000010100100110101001000 D
1C
1<
b1110 X
b1110 W
b100100000010100100110101001000 N
b10001001001111011010001 U
b100 k
b10001001001111011010001 M
10
b1011010101000001000110110110101 !
b1011010101000001000110110110101 1
b11101000100011100011001 &
b11010001000111000110 9
b0 '
b0 8
b0 B
0,
0"
03
b100001001001111011010000000000100100100000010100100110101001000 (
b100001001001111011010000000000100100100000010100100110101001000 7
b100001001001111011010000000000100100100000010100100110101001000 A
b100100000010100100110101001000 q
b10010011110110100 r
b0 /
b11011010101000001000101001000101 ;
b111 :
#230
00
#240
b100 j
b10001001001111011010000 H
b10001001001111011010000 @
b10001001001111011010000 V
b1100 -
b0 D
0C
0<
b0 X
b0 W
b10001001001111011010000 U
b100 k
b1 M
10
b111101010101011101000101111010 !
b111101010101011101000101111010 1
b11011000000100010111001 &
b10110000001000101110 9
b11010001000111000110000000000000 '
b11010001000111000110000000000000 8
b11010001000111000110000000000000 B
1,
1"
13
b0 (
b0 7
b0 A
b11010001000111000110 m
b11 /
b10111101010101011100111001100000 ;
b1000 :
#250
00
#260
b1101 -
b100 k
10
b11110101101010110101101011101011 !
b11110101101010110101101011101011 1
b11111010111001010000101 &
b11110101110010100001 9
b10110000001000101110000000000000 '
b10110000001000101110000000000000 8
b10110000001000101110000000000000 B
b10110000001000101110 m
b1110101101010110101100111010111 ;
b1001 :
#270
00
#280
b1110 -
b100 k
10
b111010111001011001101101110101 !
b111010111001011001101101110101 1
b10011100011000111001101 &
b111000110001110011 9
b11110101110010100001000000000000 '
b11110101110010100001000000000000 8
b11110101110010100001000000000000 B
b11110101110010100001 m
b10111010111001011001100011011010 ;
b1010 :
#290
00
#300
b1111 -
1C
1<
b1110 X
b1110 W
b100 k
b100 j
b11100011 Z
b1110011 Y
10
b1000100011010000010000110001000 !
b1000100011010000010000110001000 1
b11011000001100100110001 &
b10110000011001001100 9
b0 '
b0 8
b0 B
0,
0"
03
1$
15
b111000110001110011000000000000 %
b111000110001110011000000000000 =
b111000110001110011000000000000 6
b111000110001110011 o
b10 /
b11000100011010000001111101011001 ;
b1011 :
#310
00
#320
b1000100011010000010000110001000 L
b11011000001100100110001 H
b1000100011010000010000110001000 >
b1000100011010000010000110001000 O
b11011000001100100110001 @
b11011000001100100110001 V
b10000 -
b1000100011010000010000110001000 D
b100 j
b0 Z
b0 Y
b1000100011010000010000110001000 N
b11011000001100100110001 U
b100 k
b11011000001100100110001 M
10
b11000100100011011101011010001001 !
b11000100100011011101011010001001 1
b11001000110111110101101 &
b10010001101111101011 9
0$
05
b0 %
b0 =
b0 6
b101011000001100100110000000000101000100011010000010000110001000 (
b101011000001100100110000000000101000100011010000010000110001000 7
b101011000001100100110000000000101000100011010000010000110001000 A
b1000100011010000010000110001000 q
b10110000011001001100 r
b0 /
b1000100100011011101010000000100 ;
b1100 :
#330
00
#340
b10001 -
b0 D
b100 j
b1001000110 Z
b1111101011 Y
b100 k
b1 M
10
b10011001100101011011100000110011 !
b10011001100101011011100000110011 1
b10001110111010101011101 &
b11101110101010111 9
1$
15
b10010001101111101011000000000000 %
b10010001101111101011000000000000 =
b10010001101111101011000000000000 6
b0 (
b0 7
b0 A
b10010001101111101011 o
b10 /
b11001100101011011011101001011 ;
b1101 :
#350
00
#360
b10011001100101011011100000110011 L
b10001110111010101011101 H
b10011001100101011011100000110011 >
b10011001100101011011100000110011 O
b10001110111010101011101 @
b10001110111010101011101 V
b10010 -
b11001100101011011100000110011 D
b100 j
b0 Z
b0 Y
b10011001100101011011100000110011 N
b10001110111010101011101 U
b100 k
b10001110111010101011101 M
10
b11001010110010010111100010010101 !
b11001010110010010111100010010101 1
b11111111111001010001001 &
b11111111110010100010 9
0$
05
b0 %
b0 =
b0 6
b100001110111010101011100000000110011001100101011011100000110011 (
b100001110111010101011100000000110011001100101011011100000110011 7
b100001110111010101011100000000110011001100101011011100000110011 A
b10011001100101011011100000110011 q
b11101110101010111 r
b0 /
b1001010110010010111011001011110 ;
b1110 :
#370
00
#380
b100 j
b10001110111010101011100 H
b10001110111010101011100 @
b10001110111010101011100 V
b10011 -
b0 D
b10001110111010101011100 U
b100 k
b1 M
10
b10001111010111101011110000011110 !
b10001111010111101011110000011110 1
b10100010110011001111001 &
b1000101100110011110 9
1"
13
b0 (
b0 7
b0 A
b0 l
b0 m
b1 /
b1111010111101011101000101101 ;
b1111 :
#390
00
#400
b10001111010111101011110000011110 L
b100 j
b10100010110011001111001 H
b10001111010111101011110000011110 >
b10001111010111101011110000011110 O
b10100010110011001111001 @
b10100010110011001111001 V
b10100 -
b1111010111101011110000011110 D
b10001111010111101011110000011110 N
b10100010110011001111001 U
b100 k
b10100010110011001111001 M
10
b1000011001010101110010110000110 !
b1000011001010101110010110000110 1
b10101100111100001011001 &
b1011001111000010110 9
0"
03
b100100010110011001111000000000110001111010111101011110000011110 (
b100100010110011001111000000000110001111010111101011110000011110 7
b100100010110011001111000000000110001111010111101011110000011110 A
b10001111010111101011110000011110 q
b1000101100110011110 r
b0 /
b11000011001010101110001001101000 ;
b10000 :
#410
00
#420
b10101 -
b0 D
b100 j
b101100111 Z
b1000010110 Y
b100 k
b1 M
10
b11110000111011101001111011100001 !
b11110000111011101001111011100001 1
b11011010000100111001101 &
b10110100001001110011 9
1$
15
b1011001111000010110000000000000 %
b1011001111000010110000000000000 =
b1011001111000010110000000000000 6
b0 (
b0 7
b0 A
b1011001111000010110 o
b10 /
b1110000111011101001110001111111 ;
b10001 :
#430
00
#440
b10110 -
10
b101001100001001100010010110100 ;
b10010 :
