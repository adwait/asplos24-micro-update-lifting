$date
	Tue Jan 23 15:27:18 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tlb_tb $end
$var wire 32 ! cdata [31:0] $end
$var wire 1 " de_io_flush_i $end
$var wire 1 # de_io_lu_access_i $end
$var wire 1 $ de_io_lu_asid_i $end
$var wire 32 % de_io_lu_vaddr_i [31:0] $end
$var wire 31 & tdata [30:0] $end
$var wire 32 ' de_io_vaddr_to_be_flushed_i [31:0] $end
$var wire 63 ( de_io_update_i [62:0] $end
$var wire 1 ) de_io_lu_is_4M_o $end
$var wire 1 * de_io_lu_hit_o $end
$var wire 32 + de_io_lu_content_o [31:0] $end
$var wire 1 , de_io_asid_to_be_flushed_i $end
$var reg 32 - CLK_CYCLE [31:0] $end
$var reg 9 . asid [8:0] $end
$var reg 2 / choice [1:0] $end
$var reg 1 0 clk $end
$var reg 32 1 edata [31:0] $end
$var reg 1 2 reset $end
$var reg 1 , tb_io_asid_to_be_flushed_i $end
$var reg 1 3 tb_io_flush_i $end
$var reg 1 4 tb_io_lu_access_i $end
$var reg 1 5 tb_io_lu_asid_i $end
$var reg 32 6 tb_io_lu_vaddr_i [31:0] $end
$var reg 63 7 tb_io_update_i [62:0] $end
$var reg 32 8 tb_io_vaddr_to_be_flushed_i [31:0] $end
$var reg 20 9 vpn [19:0] $end
$var integer 32 : i [31:0] $end
$var integer 32 ; seed [31:0] $end
$scope module tlb_i $end
$var wire 1 , asid_to_be_flushed_i $end
$var wire 1 < asid_to_be_flushed_is0 $end
$var wire 1 0 clk_i $end
$var wire 1 " flush_i $end
$var wire 1 # lu_access_i $end
$var wire 1 $ lu_asid_i $end
$var wire 32 = lu_vaddr_i [31:0] $end
$var wire 128 > port_content_q_o [127:0] $end
$var wire 4 ? port_replace_en_o [3:0] $end
$var wire 124 @ port_tags_q_o [123:0] $end
$var wire 1 2 rst_ni $end
$var wire 63 A update_i [62:0] $end
$var wire 32 B vaddr_to_be_flushed_i [31:0] $end
$var wire 1 C vaddr_to_be_flushed_is0 $end
$var wire 31 D tdata [30:0] $end
$var wire 31 E tags_q_3 [30:0] $end
$var wire 31 F tags_q_2 [30:0] $end
$var wire 31 G tags_q_1 [30:0] $end
$var wire 31 H tags_q_0 [30:0] $end
$var wire 32 I content_q_3 [31:0] $end
$var wire 32 J content_q_2 [31:0] $end
$var wire 32 K content_q_1 [31:0] $end
$var wire 32 L content_q_0 [31:0] $end
$var wire 32 M cdata [31:0] $end
$var reg 128 N content_n [127:0] $end
$var reg 128 O content_q [127:0] $end
$var reg 32 P lu_content_o [31:0] $end
$var reg 4 Q lu_hit [3:0] $end
$var reg 1 * lu_hit_o $end
$var reg 1 ) lu_is_4M_o $end
$var reg 6 R plru_tree_n [5:0] $end
$var reg 6 S plru_tree_q [5:0] $end
$var reg 4 T replace_en [3:0] $end
$var reg 124 U tags_n [123:0] $end
$var reg 124 V tags_q [123:0] $end
$var reg 4 W vaddr_vpn0_match [3:0] $end
$var reg 4 X vaddr_vpn1_match [3:0] $end
$var reg 10 Y vpn0 [9:0] $end
$var reg 10 Z vpn1 [9:0] $end
$scope function countSetBits $end
$var reg 32 [ count [31:0] $end
$var reg 32 \ countSetBits [31:0] $end
$var reg 4 ] vector [3:0] $end
$scope begin sv2v_autoblock_9 $end
$var integer 32 ^ idx [31:0] $end
$upscope $end
$upscope $end
$scope begin p_assertions $end
$upscope $end
$scope begin plru_replacement $end
$scope begin sv2v_autoblock_3 $end
$var reg 32 _ i [31:0] $end
$scope begin sv2v_autoblock_4 $end
$var reg 32 ` idx_base [31:0] $end
$var reg 32 a new_index [31:0] $end
$var reg 32 b shift [31:0] $end
$scope begin sv2v_autoblock_5 $end
$var reg 32 c lvl [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin sv2v_autoblock_6 $end
$var reg 32 d i [31:0] $end
$scope begin sv2v_autoblock_7 $end
$var reg 1 e en $end
$var reg 32 f idx_base [31:0] $end
$var reg 32 g new_index [31:0] $end
$var reg 32 h shift [31:0] $end
$scope begin sv2v_autoblock_8 $end
$var reg 32 i lvl [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin translation $end
$scope begin sv2v_autoblock_1 $end
$var reg 32 j i [31:0] $end
$upscope $end
$upscope $end
$scope begin update_flush $end
$scope begin sv2v_autoblock_2 $end
$var reg 32 k i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope task make_tlb_flush $end
$var reg 9 l asid [8:0] $end
$var reg 20 m vpn [19:0] $end
$upscope $end
$scope task make_tlb_lookup $end
$var reg 9 n asid [8:0] $end
$var reg 20 o vpn [19:0] $end
$upscope $end
$scope task make_tlb_update $end
$var reg 9 p asid [8:0] $end
$var reg 32 q entry_data [31:0] $end
$var reg 20 r vpn [19:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
xe
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1 M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
xC
bx B
bx A
bx @
bx ?
bx >
bx =
x<
b110111010 ;
bx :
bx 9
bx 8
bx 7
bx 6
x5
x4
x3
12
bx 1
10
bx /
bx .
b0 -
x,
bx +
x*
x)
bx (
bx '
bx01 &
bx %
x$
x#
x"
bx !
$end
#10
00
#20
b1 ?
b1 T
b1 g
b1 h
b1 f
b10 i
0e
b100 d
b100 _
b0 R
b0 L
b0 K
b0 J
b0 I
b100 k
b0 N
b0 U
b100 j
0)
b0 +
b0 P
0*
b0 Q
b0 H
b0 G
b0 F
b0 E
b1 -
b0 S
b0 >
b0 O
b0 @
b0 V
10
02
#30
00
#40
b10 -
10
#50
00
#60
b11 -
10
b1110000101111010001001111100001 !
b1110000101111010001001111100001 1
b11101010000000011 9
b11110000101111010001000010011000 ;
b10001110101000000001101 &
b1 .
12
#70
00
#80
b100 -
b0 D
0C
0<
b100 j
b0 Z
b0 Y
b0 X
b0 W
b100 k
b1 M
10
b110011101010101001110101100111 !
b110011101010101001110101100111 1
b11110110010000001000001 &
b11101100100000010000 9
b11101010000000011000000000000 '
b11101010000000011000000000000 8
b11101010000000011000000000000 B
1,
1"
13
0$
05
b0 %
b0 =
b0 6
b0 (
b0 7
b0 A
b1 l
b11101010000000011 m
b11 /
b10110011101010101001101001101111 ;
b0 :
#90
00
#100
b101 -
b100 k
10
b110001110110001010000101100011 !
b110001110110001010000101100011 1
b11010111101010100011101 &
b10101111010101000111 9
b11101100100000010000000000000000 '
b11101100100000010000000000000000 8
b11101100100000010000000000000000 B
b11101100100000010000 m
b10110001110110001001111101010010 ;
b1 :
#110
00
#120
b110 -
b100 k
10
b11101011101010100110101011010111 !
b11101011101010100110101011010111 1
b10010010111100010001001 &
b100101111000100010 9
b10101111010101000111000000000000 '
b10101111010101000111000000000000 8
b10101111010101000111000000000000 B
b10101111010101000111 m
b1101011101010100110100100110001 ;
b10 :
#130
00
#140
b111 -
b100 k
10
b11100110011111110100111011001100 !
b11100110011111110100111011001100 1
b10000011111101001111101 &
b111111010011111 9
b100101111000100010000000000000 '
b100101111000100010000000000000 8
b100101111000100010000000000000 B
b100101111000100010 m
b1100110011111110100110010111100 ;
b11 :
#150
00
#160
b1000 -
b100 k
10
b111110001011111101001101111100 !
b111110001011111101001101111100 1
b10011000000000001000001 &
b110000000000010000 9
b111111010011111000000000000 '
b111111010011111000000000000 8
b111111010011111000000000000 B
b111111010011111 m
b10111110001011111101000001100011 ;
b100 :
#170
00
#180
b111110001011111101001101111100 L
b100 j
b10011000000000001000001 H
b111110001011111101001101111100 >
b111110001011111101001101111100 O
b10011000000000001000001 @
b10011000000000001000001 V
b1001 -
b111110001011111101001101111100 D
1C
1<
b111110001011111101001101111100 N
b10011000000000001000001 U
b1110 X
b1110 W
b100 k
b10011000000000001000001 M
10
b1101011101000010000100011010 !
b1101011101000010000100011010 1
b11111000100011110101101 &
b11110001000111101011 9
b0 '
b0 8
b0 B
0,
0"
03
b100011000000000001000000000000100111110001011111101001101111100 (
b100011000000000001000000000000100111110001011111101001101111100 7
b100011000000000001000000000000100111110001011111101001101111100 A
b111110001011111101001101111100 q
b1 p
b110000000000010000 r
b0 /
b10001101011101000001111101010110 ;
b101 :
#190
00
#200
b100 j
b10011000000000001000000 H
b10011000000000001000000 @
b10011000000000001000000 V
b1010 -
b0 D
b10011000000000001000000 U
b100 k
b1 M
10
b1111010100010101011101111110101 !
b1111010100010101011101111110101 1
b11011101110001011011101 &
b10111011100010110111 9
1"
13
b0 (
b0 7
b0 A
b0 l
b0 m
b1 /
b11111010100010101011100010000101 ;
b110 :
#210
00
#220
b1011 -
10
b11011010001010000101100110110 !
b11011010001010000101100110110 1
b11101111010100001010101 &
b11011110101000010101 9
b10011011010001010000100110100000 ;
b111 :
#230
00
#240
b1100 -
b100 k
b100 j
b1101111010 Z
b1000010101 Y
10
b1101000111001010110100111010001 !
b1101000111001010110100111010001 1
b11111010110101111111001 &
b11110101101011111110 9
0"
03
1$
15
b11011110101000010101000000000000 %
b11011110101000010101000000000000 =
b11011110101000010101000000000000 6
b1 n
b11011110101000010101 o
b10 /
b11101000111001010110011000010111 ;
b1000 :
#250
00
#260
b1101 -
0C
0<
b0 X
b0 W
b100 k
b100 j
b0 Z
b0 Y
10
b1100100100000101000110111001001 !
b1100100100000101000110111001001 1
b10101000000110100101101 &
b1010000001101001011 9
b11110101101011111110000000000000 '
b11110101101011111110000000000000 8
b11110101101011111110000000000000 B
1,
1"
13
0$
05
b0 %
b0 =
b0 6
b1 l
b11110101101011111110 m
b11 /
b11100100100000101000101000011010 ;
b1001 :
#270
00
#280
b1110 -
b100 k
10
b1101111011011001001101111011110 !
b1101111011011001001101111011110 1
b10001001010000010101101 &
b10010100000101011 9
b1010000001101001011000000000000 '
b1010000001101001011000000000000 8
b1010000001101001011000000000000 B
b1010000001101001011 m
b11101111011011001001100110011001 ;
b1010 :
#290
00
#300
b1111 -
1C
1<
b1110 X
b1110 W
b100 k
b100 j
b1001010 Z
b101011 Y
10
b11110110100000100100110011101101 !
b11110110100000100100110011101101 1
b11010001011111101111101 &
b10100010111111011111 9
b0 '
b0 8
b0 B
0,
0"
03
1$
15
b10010100000101011000000000000 %
b10010100000101011000000000000 =
b10010100000101011000000000000 6
b10010100000101011 o
b10 /
b1110110100000100100101101000100 ;
b1011 :
#310
00
#320
b10000 -
b100 j
b1010001011 Z
b1111011111 Y
10
b1100010000111101011000111000100 !
b1100010000111101011000111000100 1
b10000011101001011000101 &
b111010010110001 9
b10100010111111011111000000000000 %
b10100010111111011111000000000000 =
b10100010111111011111000000000000 6
b10100010111111011111 o
b11100010000111101010111110001011 ;
b1100 :
#330
00
#340
b10001 -
b100 j
b11101 Z
b10110001 Y
10
b110010000101001100010101100100 !
b110010000101001100010101100100 1
b11101001111111100111101 &
b11010011111111001111 9
b111010010110001000000000000 %
b111010010110001000000000000 =
b111010010110001000000000000 6
b111010010110001 o
b10110010000101001100001110011110 ;
b1101 :
#350
00
#360
b110010000101001100010101100100 L
b11101001111111100111101 H
b110010000101001100010101100100 >
b110010000101001100010101100100 O
b11101001111111100111101 @
b11101001111111100111101 V
b10010 -
b110010000101001100010101100100 D
b100 j
b0 Z
b0 Y
b110010000101001100010101100100 N
b11101001111111100111101 U
b100 k
b11101001111111100111101 M
10
b10011010110010011100001000110101 !
b10011010110010011100001000110101 1
b11111001110010011101101 &
b11110011100100111011 9
0$
05
b0 %
b0 =
b0 6
b101101001111111100111100000000100110010000101001100010101100100 (
b101101001111111100111100000000100110010000101001100010101100100 7
b101101001111111100111100000000100110010000101001100010101100100 A
b110010000101001100010101100100 q
b11010011111111001111 r
b0 /
b11010110010011100000001101101 ;
b1110 :
#370
00
#380
b100 j
b11101001111111100111100 H
b11101001111111100111100 @
b11101001111111100111100 V
b10011 -
b0 D
b11101001111111100111100 U
b100 k
b1 M
10
b1010010010101011101011110100100 !
b1010010010101011101011110100100 1
b11011000111101011010001 &
b10110001111010110100 9
1"
13
b0 (
b0 7
b0 A
b0 l
b0 m
b1 /
b11010010010101011101010110101000 ;
b1111 :
#390
00
#400
b1010010010101011101011110100100 L
b100 j
b11011000111101011010001 H
b1010010010101011101011110100100 >
b1010010010101011101011110100100 O
b11011000111101011010001 @
b11011000111101011010001 V
b10100 -
b1010010010101011101011110100100 D
b1010010010101011101011110100100 N
b11011000111101011010001 U
b100 k
b11011000111101011010001 M
10
b1100100100000001100001111001001 !
b1100100100000001100001111001001 1
b11011101101100010001101 &
b10111011011000100011 9
0"
03
b101011000111101011010000000000101010010010101011101011110100100 (
b101011000111101011010000000000101010010010101011101011110100100 7
b101011000111101011010000000000101010010010101011101011110100100 A
b1010010010101011101011110100100 q
b10110001111010110100 r
b0 /
b11100100100000001100000010111111 ;
b10000 :
#410
00
#420
b100 j
b11011000111101011010000 H
b11011000111101011010000 @
b11011000111101011010000 V
b10101 -
b0 D
0C
0<
b0 X
b0 W
b11011000111101011010000 U
b100 k
b1 M
10
b10011010100000000111000000110101 !
b10011010100000000111000000110101 1
b11111111110000010111001 &
b11111111100000101110 9
b10111011011000100011000000000000 '
b10111011011000100011000000000000 8
b10111011011000100011000000000000 B
1,
1"
13
b0 (
b0 7
b0 A
b1 l
b10111011011000100011 m
b11 /
b11010100000000110111111100010 ;
b10001 :
#430
00
#440
b10110 -
10
b101110011010100001000111111011 ;
b10010 :
