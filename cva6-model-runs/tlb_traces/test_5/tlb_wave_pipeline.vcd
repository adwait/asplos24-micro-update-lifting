$date
	Tue Jan 23 15:27:18 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tlb_tb $end
$var wire 32 ! cdata [31:0] $end
$var wire 1 " de_io_flush_i $end
$var wire 1 # de_io_lu_access_i $end
$var wire 1 $ de_io_lu_asid_i $end
$var wire 32 % de_io_lu_vaddr_i [31:0] $end
$var wire 31 & tdata [30:0] $end
$var wire 32 ' de_io_vaddr_to_be_flushed_i [31:0] $end
$var wire 63 ( de_io_update_i [62:0] $end
$var wire 1 ) de_io_lu_is_4M_o $end
$var wire 1 * de_io_lu_hit_o $end
$var wire 32 + de_io_lu_content_o [31:0] $end
$var wire 1 , de_io_asid_to_be_flushed_i $end
$var reg 32 - CLK_CYCLE [31:0] $end
$var reg 9 . asid [8:0] $end
$var reg 2 / choice [1:0] $end
$var reg 1 0 clk $end
$var reg 32 1 edata [31:0] $end
$var reg 1 2 reset $end
$var reg 1 , tb_io_asid_to_be_flushed_i $end
$var reg 1 3 tb_io_flush_i $end
$var reg 1 4 tb_io_lu_access_i $end
$var reg 1 5 tb_io_lu_asid_i $end
$var reg 32 6 tb_io_lu_vaddr_i [31:0] $end
$var reg 63 7 tb_io_update_i [62:0] $end
$var reg 32 8 tb_io_vaddr_to_be_flushed_i [31:0] $end
$var reg 20 9 vpn [19:0] $end
$var integer 32 : i [31:0] $end
$var integer 32 ; seed [31:0] $end
$scope module tlb_i $end
$var wire 1 , asid_to_be_flushed_i $end
$var wire 1 < asid_to_be_flushed_is0 $end
$var wire 1 0 clk_i $end
$var wire 1 " flush_i $end
$var wire 1 # lu_access_i $end
$var wire 1 $ lu_asid_i $end
$var wire 32 = lu_vaddr_i [31:0] $end
$var wire 128 > port_content_q_o [127:0] $end
$var wire 4 ? port_replace_en_o [3:0] $end
$var wire 124 @ port_tags_q_o [123:0] $end
$var wire 1 2 rst_ni $end
$var wire 63 A update_i [62:0] $end
$var wire 32 B vaddr_to_be_flushed_i [31:0] $end
$var wire 1 C vaddr_to_be_flushed_is0 $end
$var wire 31 D tdata [30:0] $end
$var wire 31 E tags_q_3 [30:0] $end
$var wire 31 F tags_q_2 [30:0] $end
$var wire 31 G tags_q_1 [30:0] $end
$var wire 31 H tags_q_0 [30:0] $end
$var wire 32 I content_q_3 [31:0] $end
$var wire 32 J content_q_2 [31:0] $end
$var wire 32 K content_q_1 [31:0] $end
$var wire 32 L content_q_0 [31:0] $end
$var wire 32 M cdata [31:0] $end
$var reg 128 N content_n [127:0] $end
$var reg 128 O content_q [127:0] $end
$var reg 32 P lu_content_o [31:0] $end
$var reg 4 Q lu_hit [3:0] $end
$var reg 1 * lu_hit_o $end
$var reg 1 ) lu_is_4M_o $end
$var reg 6 R plru_tree_n [5:0] $end
$var reg 6 S plru_tree_q [5:0] $end
$var reg 4 T replace_en [3:0] $end
$var reg 124 U tags_n [123:0] $end
$var reg 124 V tags_q [123:0] $end
$var reg 4 W vaddr_vpn0_match [3:0] $end
$var reg 4 X vaddr_vpn1_match [3:0] $end
$var reg 10 Y vpn0 [9:0] $end
$var reg 10 Z vpn1 [9:0] $end
$scope function countSetBits $end
$var reg 32 [ count [31:0] $end
$var reg 32 \ countSetBits [31:0] $end
$var reg 4 ] vector [3:0] $end
$scope begin sv2v_autoblock_9 $end
$var integer 32 ^ idx [31:0] $end
$upscope $end
$upscope $end
$scope begin p_assertions $end
$upscope $end
$scope begin plru_replacement $end
$scope begin sv2v_autoblock_3 $end
$var reg 32 _ i [31:0] $end
$scope begin sv2v_autoblock_4 $end
$var reg 32 ` idx_base [31:0] $end
$var reg 32 a new_index [31:0] $end
$var reg 32 b shift [31:0] $end
$scope begin sv2v_autoblock_5 $end
$var reg 32 c lvl [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin sv2v_autoblock_6 $end
$var reg 32 d i [31:0] $end
$scope begin sv2v_autoblock_7 $end
$var reg 1 e en $end
$var reg 32 f idx_base [31:0] $end
$var reg 32 g new_index [31:0] $end
$var reg 32 h shift [31:0] $end
$scope begin sv2v_autoblock_8 $end
$var reg 32 i lvl [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin translation $end
$scope begin sv2v_autoblock_1 $end
$var reg 32 j i [31:0] $end
$upscope $end
$upscope $end
$scope begin update_flush $end
$scope begin sv2v_autoblock_2 $end
$var reg 32 k i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope task make_tlb_flush $end
$var reg 9 l asid [8:0] $end
$var reg 20 m vpn [19:0] $end
$upscope $end
$scope task make_tlb_lookup $end
$var reg 9 n asid [8:0] $end
$var reg 20 o vpn [19:0] $end
$upscope $end
$scope task make_tlb_update $end
$var reg 9 p asid [8:0] $end
$var reg 32 q entry_data [31:0] $end
$var reg 20 r vpn [19:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
xe
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1 M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
xC
bx B
bx A
bx @
bx ?
bx >
bx =
x<
b1001111 ;
bx :
bx 9
bx 8
bx 7
bx 6
x5
x4
x3
12
bx 1
10
bx /
bx .
b0 -
x,
bx +
x*
x)
bx (
bx '
bx01 &
bx %
x$
x#
x"
bx !
$end
#10
00
#20
b1 ?
b1 T
b1 g
b1 h
b1 f
b10 i
0e
b100 d
b100 _
b0 R
b0 L
b0 K
b0 J
b0 I
b100 k
b0 N
b0 U
b100 j
0)
b0 +
b0 P
0*
b0 Q
b0 H
b0 G
b0 F
b0 E
b1 -
b0 S
b0 >
b0 O
b0 @
b0 V
10
02
#30
00
#40
b10 -
10
#50
00
#60
b11 -
10
b111111010011011000011101111110 !
b111111010011011000011101111110 1
b110100010000000000 9
b10111111010011011000010001110101 ;
b10011010001000000000001 &
b1 .
12
#70
00
#80
b100 -
b0 D
1C
1<
b100 j
b11010001 Z
b0 Y
b1111 X
b1111 W
b100 k
b1 M
10
b11001010000000011000101010010100 !
b11001010000000011000101010010100 1
b10001001101010110010101 &
b10011010101100101 9
b0 '
b0 8
b0 B
0,
0"
03
1$
15
b110100010000000000000000000000 %
b110100010000000000000000000000 =
b110100010000000000000000000000 6
b0 (
b0 7
b0 A
b1 n
b110100010000000000 o
b10 /
b1001010000000011000100001010000 ;
b0 :
#90
00
#100
b101 -
b100 j
b1001101 Z
b101100101 Y
10
b11101001100111111110000011010011 !
b11101001100111111110000011010011 1
b10100110001000101010101 &
b1001100010001010101 9
b10011010101100101000000000000 %
b10011010101100101000000000000 =
b10011010101100101000000000000 6
b10011010101100101 o
b1101001100111111101111010000111 ;
b1 :
#110
00
#120
b110 -
0C
0<
b0 X
b0 W
b100 k
b100 j
b0 Z
b0 Y
10
b1111001011011110001000111110010 !
b1111001011011110001000111110010 1
b10101111011011011101101 &
b1011110110110111011 9
b1001100010001010101000000000000 '
b1001100010001010101000000000000 8
b1001100010001010101000000000000 B
1,
1"
13
0$
05
b0 %
b0 =
b0 6
b1 l
b1001100010001010101 m
b11 /
b11111001011011110000111101001010 ;
b10 :
#130
00
#140
b111 -
1C
b1111 X
b1111 W
b100 k
1<
10
b100001001111111110100001000 !
b100001001111111110100001000 1
b10110100111101111101001 &
b1101001111011111010 9
b0 '
b0 8
b0 B
0,
b0 l
b0 m
b1 /
b10000100001001111111101010001001 ;
b11 :
#150
00
#160
b100001001111111110100001000 L
b1110 X
b1110 W
b100 j
b10110100111101111101001 H
b100001001111111110100001000 >
b100001001111111110100001000 O
b10110100111101111101001 @
b10110100111101111101001 V
b1000 -
b100001001111111110100001000 D
b100001001111111110100001000 N
b10110100111101111101001 U
b100 k
b10110100111101111101001 M
10
b11101010010000011100010011010100 !
b11101010010000011100010011010100 1
b11011010101010110010101 &
b10110101010101100101 9
0"
03
b100110100111101111101000000000100000100001001111111110100001000 (
b100110100111101111101000000000100000100001001111111110100001000 7
b100110100111101111101000000000100000100001001111111110100001000 A
b100001001111111110100001000 q
b1 p
b1101001111011111010 r
b0 /
b1101010010000011100001011110100 ;
b100 :
#170
00
#180
b100 j
b10110100111101111101000 H
b10110100111101111101000 @
b10110100111101111101000 V
b1001 -
b0 D
b10110100111101111101000 U
b100 k
b1 M
10
b1101001011011010101011111010010 !
b1101001011011010101011111010010 1
b10101110000000001000001 &
b1011100000000010000 9
1"
13
b0 (
b0 7
b0 A
b1 /
b11101001011011010101010011111011 ;
b101 :
#190
00
#200
b1010 -
10
b10101110110000011011101001011101 !
b10101110110000011011101001011101 1
b10111010111101110001101 &
b1110101111011100011 9
b101110110000011011100111001110 ;
b110 :
#210
00
#220
b1011 -
b100 k
b100 j
b111010111 Z
b1011100011 Y
10
b10100000101001100010100001000001 !
b10100000101001100010100001000001 1
b11100110001000101111001 &
b11001100010001011110 9
0"
03
1$
15
b1110101111011100011000000000000 %
b1110101111011100011000000000000 =
b1110101111011100011000000000000 6
b1110101111011100011 o
b10 /
b100000101001100010011001011101 ;
b111 :
#230
00
#240
b1100 -
b100 j
b1100110001 Z
b1011110 Y
10
b1111000000011010111100111110000 !
b1111000000011010111100111110000 1
b10100000100100101100001 &
b1000001001001011000 9
b11001100010001011110000000000000 %
b11001100010001011110000000000000 =
b11001100010001011110000000000000 6
b11001100010001011110 o
b11111000000011010111011001011000 ;
b1000 :
#250
00
#260
b1111000000011010111100111110000 L
b10100000100100101100001 H
b1111000000011010111100111110000 >
b1111000000011010111100111110000 O
b10100000100100101100001 @
b10100000100100101100001 V
b1101 -
b1111000000011010111100111110000 D
b100 j
b0 Z
b0 Y
b1111000000011010111100111110000 N
b10100000100100101100001 U
b100 k
b10100000100100101100001 M
10
b1011010111101001000010110110101 !
b1011010111101001000010110110101 1
b10101100100100111100101 &
b1011001001001111001 9
0$
05
b0 %
b0 =
b0 6
b100100000100100101100000000000101111000000011010111100111110000 (
b100100000100100101100000000000101111000000011010111100111110000 7
b100100000100100101100000000000101111000000011010111100111110000 A
b1111000000011010111100111110000 q
b1000001001001011000 r
b0 /
b11011010111101001000001100101111 ;
b1001 :
#270
00
#280
b100 j
b10100000100100101100000 H
b10100000100100101100000 @
b10100000100100101100000 V
b1110 -
b0 D
0C
0<
b0 X
b0 W
b10100000100100101100000 U
b100 k
b1 M
10
b11100111010101011000100011001110 !
b11100111010101011000100011001110 1
b11001101111000000001101 &
b10011011110000000011 9
b1011001001001111001000000000000 '
b1011001001001111001000000000000 8
b1011001001001111001000000000000 B
1,
1"
13
b0 (
b0 7
b0 A
b1 l
b1011001001001111001 m
b11 /
b1100111010101011000011100010010 ;
b1010 :
#290
00
#300
b11100111010101011000100011001110 L
b100 j
b11001101111000000001101 H
b11100111010101011000100011001110 >
b11100111010101011000100011001110 O
b11001101111000000001101 @
b11001101111000000001101 V
b1111 -
b1100111010101011000100011001110 D
1C
1<
b1110 X
b1110 W
b11100111010101011000100011001110 N
b11001101111000000001101 U
b100 k
b11001101111000000001101 M
10
b10011010111000100111110000110101 !
b10011010111000100111110000110101 1
b10101111111001011111001 &
b1011111110010111110 9
b0 '
b0 8
b0 B
0,
0"
03
b101001101111000000001100000000111100111010101011000100011001110 (
b101001101111000000001100000000111100111010101011000100011001110 7
b101001101111000000001100000000111100111010101011000100011001110 A
b11100111010101011000100011001110 q
b10011011110000000011 r
b0 /
b11010111000100111101111110001 ;
b1011 :
#310
00
#320
b100 j
b11001101111000000001100 H
b11001101111000000001100 @
b11001101111000000001100 V
b10000 -
b0 D
0C
0<
b0 X
b0 W
b11001101111000000001100 U
b100 k
b1 M
10
b10010100000110010100100100101 !
b10010100000110010100100100101 1
b11111111111110101010001 &
b11111111111101010100 9
b1011111110010111110000000000000 '
b1011111110010111110000000000000 8
b1011111110010111110000000000000 B
1,
1"
13
b0 (
b0 7
b0 A
b1011111110010111110 m
b11 /
b10010010100000110010011001111100 ;
b1100 :
#330
00
#340
b10010100000110010100100100101 L
b100 j
b11111111111110101010001 H
b10010100000110010100100100101 >
b10010100000110010100100100101 O
b11111111111110101010001 @
b11111111111110101010001 V
b10001 -
b10010100000110010100100100101 D
1C
1<
b1110 X
b1110 W
b10010100000110010100100100101 N
b11111111111110101010001 U
b100 k
b11111111111110101010001 M
10
b11110100111001010011111011101001 !
b11110100111001010011111011101001 1
b11111011000010110101001 &
b11110110000101101010 9
b0 '
b0 8
b0 B
0,
0"
03
b101111111111110101010000000000100010010100000110010100100100101 (
b101111111111110101010000000000100010010100000110010100100100101 7
b101111111111110101010000000000100010010100000110010100100100101 A
b10010100000110010100100100101 q
b11111111111101010100 r
b0 /
b1110100111001010011110100100011 ;
b1101 :
#350
00
#360
b100 j
b11111111111110101010000 H
b11111111111110101010000 @
b11111111111110101010000 V
b10010 -
b0 D
b11111111111110101010000 U
b100 k
b1 M
10
b11000000101100011101110010000001 !
b11000000101100011101110010000001 1
b11101111111000111010101 &
b11011111110001110101 9
1"
13
b0 (
b0 7
b0 A
b0 l
b0 m
b1 /
b1000000101100011101101100010110 ;
b1110 :
#370
00
#380
b10011 -
0C
b0 X
b0 W
b100 k
0<
10
b1001011011011110011000110010110 !
b1001011011011110011000110010110 1
b11001010010100001111001 &
b10010100101000011110 9
b11011111110001110101000000000000 '
b11011111110001110101000000000000 8
b11011111110001110101000000000000 B
1,
b1 l
b11011111110001110101 m
b11 /
b11001011011011110010111101000101 ;
b1111 :
#390
00
#400
b10100 -
1C
b1110 X
b1110 W
b100 k
1<
10
b1110001101001000001100111100011 !
b1110001101001000001100111100011 1
b10001011011110100000001 &
b10110111101000000 9
b0 '
b0 8
b0 B
0,
b0 l
b0 m
b1 /
b11110001101001000001011101100000 ;
b10000 :
#410
00
#420
b10101 -
10
b11101110110110010001100011011101 !
b11101110110110010001100011011101 1
b11111000011111011111001 &
b11110000111110111110 9
b1101110110110010001011011010111 ;
b10001 :
#430
00
#440
b10110 -
10
b11100000110101110011010100101100 ;
b10010 :
