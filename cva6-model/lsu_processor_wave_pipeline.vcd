$date
	Sun Apr  9 15:11:52 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cva6_processor_tb $end
$var wire 32 ! de_io_instr_i [31:0] $end
$var wire 1 " de_io_instr_valid_i $end
$var wire 1 # de_io_load_mem_resp_i $end
$var wire 1 $ de_io_store_mem_resp_i $end
$var reg 32 % CLK_CYCLE [31:0] $end
$var reg 2 & choice [1:0] $end
$var reg 1 ' clk $end
$var reg 4 ( funct3 [3:0] $end
$var reg 12 ) imm [11:0] $end
$var reg 32 * next_instr [31:0] $end
$var reg 7 + opcode [6:0] $end
$var reg 5 , rd [4:0] $end
$var reg 1 - reset $end
$var reg 5 . rs1 [4:0] $end
$var reg 5 / rs2 [4:0] $end
$var reg 32 0 tb_io_instr_i [31:0] $end
$var reg 1 1 tb_io_instr_valid_i $end
$var reg 1 2 tb_io_load_mem_resp_i $end
$var reg 1 3 tb_io_store_mem_resp_i $end
$var integer 32 4 i [31:0] $end
$var integer 32 5 seed [31:0] $end
$scope module shim_i $end
$var wire 1 ' clk_i $end
$var wire 32 6 de_io_instr_i [31:0] $end
$var wire 1 7 de_io_instr_valid_i $end
$var wire 1 8 de_io_is_load_i $end
$var wire 1 9 de_io_load_mem_resp_i $end
$var wire 1 : de_io_store_mem_resp_i $end
$var wire 32 ; instr_i [31:0] $end
$var wire 1 < instr_ready_o $end
$var wire 1 " instr_valid_i $end
$var wire 1 # load_mem_resp_i $end
$var wire 1 - rst_ni $end
$var wire 1 $ store_mem_resp_i $end
$var reg 1 = load_cooldown $end
$var reg 1 > load_count $end
$var reg 32 ? loadstore_addr [31:0] $end
$var reg 3 @ loadstore_fsm [2:0] $end
$var reg 1 A loadstore_state $end
$var reg 32 B mem_0 [31:0] $end
$var reg 32 C mem_1 [31:0] $end
$var reg 32 D mem_10 [31:0] $end
$var reg 32 E mem_11 [31:0] $end
$var reg 32 F mem_12 [31:0] $end
$var reg 32 G mem_13 [31:0] $end
$var reg 32 H mem_14 [31:0] $end
$var reg 32 I mem_15 [31:0] $end
$var reg 32 J mem_16 [31:0] $end
$var reg 32 K mem_17 [31:0] $end
$var reg 32 L mem_18 [31:0] $end
$var reg 32 M mem_19 [31:0] $end
$var reg 32 N mem_2 [31:0] $end
$var reg 32 O mem_20 [31:0] $end
$var reg 32 P mem_21 [31:0] $end
$var reg 32 Q mem_22 [31:0] $end
$var reg 32 R mem_23 [31:0] $end
$var reg 32 S mem_24 [31:0] $end
$var reg 32 T mem_25 [31:0] $end
$var reg 32 U mem_26 [31:0] $end
$var reg 32 V mem_27 [31:0] $end
$var reg 32 W mem_28 [31:0] $end
$var reg 32 X mem_29 [31:0] $end
$var reg 32 Y mem_3 [31:0] $end
$var reg 32 Z mem_30 [31:0] $end
$var reg 32 [ mem_31 [31:0] $end
$var reg 32 \ mem_4 [31:0] $end
$var reg 32 ] mem_5 [31:0] $end
$var reg 32 ^ mem_6 [31:0] $end
$var reg 32 _ mem_7 [31:0] $end
$var reg 32 ` mem_8 [31:0] $end
$var reg 32 a mem_9 [31:0] $end
$var reg 1 b ready_o $end
$var reg 32 c reg_0 [31:0] $end
$var reg 32 d reg_1 [31:0] $end
$var reg 32 e reg_10 [31:0] $end
$var reg 32 f reg_11 [31:0] $end
$var reg 32 g reg_12 [31:0] $end
$var reg 32 h reg_13 [31:0] $end
$var reg 32 i reg_14 [31:0] $end
$var reg 32 j reg_15 [31:0] $end
$var reg 32 k reg_16 [31:0] $end
$var reg 32 l reg_17 [31:0] $end
$var reg 32 m reg_18 [31:0] $end
$var reg 32 n reg_19 [31:0] $end
$var reg 32 o reg_2 [31:0] $end
$var reg 32 p reg_20 [31:0] $end
$var reg 32 q reg_21 [31:0] $end
$var reg 32 r reg_22 [31:0] $end
$var reg 32 s reg_23 [31:0] $end
$var reg 32 t reg_24 [31:0] $end
$var reg 32 u reg_25 [31:0] $end
$var reg 32 v reg_26 [31:0] $end
$var reg 32 w reg_27 [31:0] $end
$var reg 32 x reg_28 [31:0] $end
$var reg 32 y reg_29 [31:0] $end
$var reg 32 z reg_3 [31:0] $end
$var reg 32 { reg_30 [31:0] $end
$var reg 32 | reg_31 [31:0] $end
$var reg 32 } reg_4 [31:0] $end
$var reg 32 ~ reg_5 [31:0] $end
$var reg 32 !" reg_6 [31:0] $end
$var reg 32 "" reg_7 [31:0] $end
$var reg 32 #" reg_8 [31:0] $end
$var reg 32 $" reg_9 [31:0] $end
$var reg 1 %" store_cooldown $end
$var reg 3 &" store_count [2:0] $end
$var reg 32 '" tb_io_instr_i [31:0] $end
$var reg 1 (" tb_io_instr_valid_i $end
$var reg 1 )" tb_io_is_load_i $end
$var reg 1 *" tb_io_load_mem_resp_i $end
$var reg 1 +" tb_io_store_mem_resp_i $end
$var integer 32 ," i [31:0] $end
$scope function alu_compute_i $end
$var reg 32 -" alu_compute_i [31:0] $end
$var reg 3 ." alu_fun [2:0] $end
$var reg 32 /" imm_data [31:0] $end
$var reg 32 0" reg_data [31:0] $end
$upscope $end
$scope function get_i_imm $end
$var reg 32 1" get_i_imm [31:0] $end
$var reg 32 2" inst [31:0] $end
$upscope $end
$scope function get_s_imm $end
$var reg 32 3" get_s_imm [31:0] $end
$var reg 32 4" inst [31:0] $end
$upscope $end
$scope function is_alui $end
$var reg 32 5" instr [31:0] $end
$var reg 1 6" is_alui $end
$upscope $end
$scope function is_load $end
$var reg 32 7" instr [31:0] $end
$var reg 1 8" is_load $end
$upscope $end
$scope function is_store $end
$var reg 32 9" instr [31:0] $end
$var reg 1 :" is_store $end
$upscope $end
$scope function sra $end
$var reg 64 ;" d [63:0] $end
$var reg 5 <" shamt [4:0] $end
$var reg 32 =" sra [31:0] $end
$upscope $end
$scope module lsu_shim_i $end
$var wire 1 ' clk_i $end
$var wire 65 >" de_io_amo_resp_i [64:0] $end
$var wire 1 ?" de_io_amo_valid_commit_i $end
$var wire 1 @" de_io_asid_i $end
$var wire 1 A" de_io_asid_to_be_flushed_i $end
$var wire 1 B" de_io_commit_i $end
$var wire 1 C" de_io_dcache_wbuffer_empty_i $end
$var wire 1 D" de_io_dcache_wbuffer_not_ni_i $end
$var wire 1 E" de_io_dtlb_miss_o $end
$var wire 1 F" de_io_en_ld_st_translation_i $end
$var wire 1 G" de_io_enable_translation_i $end
$var wire 1 H" de_io_flush_i $end
$var wire 1 I" de_io_flush_tlb_i $end
$var wire 33 J" de_io_icache_areq_i [32:0] $end
$var wire 1 K" de_io_itlb_miss_o $end
$var wire 2 L" de_io_ld_st_priv_lvl_i [1:0] $end
$var wire 1 M" de_io_mxr_i $end
$var wire 512 N" de_io_pmpaddr_i [511:0] $end
$var wire 128 O" de_io_pmpcfg_i [127:0] $end
$var wire 2 P" de_io_priv_lvl_i [1:0] $end
$var wire 22 Q" de_io_satp_ppn_i [21:0] $end
$var wire 1 R" de_io_sum_i $end
$var wire 32 S" de_io_vaddr_to_be_flushed_i [31:0] $end
$var wire 32 T" instr_i [31:0] $end
$var wire 1 7 instr_valid_i $end
$var wire 1 8 is_load_i $end
$var wire 1 9 load_mem_resp_i $end
$var wire 1 U" ready_o $end
$var wire 1 - rst_ni $end
$var wire 1 : store_mem_resp_i $end
$var reg 3 V" load_memreq_state [2:0] $end
$var reg 2 W" load_req_state [1:0] $end
$var reg 2 X" store_req_state [1:0] $end
$var reg 1 Y" tb_io_commit_i $end
$var reg 3 Z" tb_io_commit_tran_id_i [2:0] $end
$var reg 105 [" tb_io_dcache_req_ports_i [104:0] $end
$var reg 111 \" tb_io_fu_data_i [110:0] $end
$var reg 1 ]" tb_io_lsu_valid_i $end
$scope module lsu_i $end
$var wire 65 ^" amo_resp_i [64:0] $end
$var wire 1 ?" amo_valid_commit_i $end
$var wire 1 @" asid_i $end
$var wire 1 A" asid_to_be_flushed_i $end
$var wire 1 ' clk_i $end
$var wire 1 B" commit_i $end
$var wire 3 _" commit_tran_id_i [2:0] $end
$var wire 105 `" dcache_req_ports_i [104:0] $end
$var wire 1 C" dcache_wbuffer_empty_i $end
$var wire 1 D" dcache_wbuffer_not_ni_i $end
$var wire 1 a" dtlb_hit $end
$var wire 1 E" dtlb_miss_o $end
$var wire 1 F" en_ld_st_translation_i $end
$var wire 1 G" enable_translation_i $end
$var wire 1 H" flush_i $end
$var wire 1 I" flush_tlb_i $end
$var wire 111 b" fu_data_i [110:0] $end
$var wire 33 c" icache_areq_i [32:0] $end
$var wire 1 K" itlb_miss_o $end
$var wire 2 d" ld_st_priv_lvl_i [1:0] $end
$var wire 1 ]" lsu_valid_i $end
$var wire 65 e" mmu_exception [64:0] $end
$var wire 1 M" mxr_i $end
$var wire 512 f" pmpaddr_i [511:0] $end
$var wire 128 g" pmpcfg_i [127:0] $end
$var wire 2 h" priv_lvl_i [1:0] $end
$var wire 1 - rst_ni $end
$var wire 22 i" satp_ppn_i [21:0] $end
$var wire 32 j" st_result [31:0] $end
$var wire 1 R" sum_i $end
$var wire 32 k" vaddr_i [31:0] $end
$var wire 32 l" vaddr_to_be_flushed_i [31:0] $end
$var reg 1 m" data_misaligned $end
$var reg 1 n" ld_valid_i $end
$var reg 65 o" misaligned_exception [64:0] $end
$var reg 34 p" mmu_paddr [33:0] $end
$var reg 32 q" mmu_vaddr [31:0] $end
$var reg 1 r" st_valid_i $end
$var reg 1 s" translation_req $end
$var reg 1 t" translation_valid $end
$scope function ariane_pkg_be_gen $end
$upscope $end
$scope function ariane_pkg_be_gen_32 $end
$upscope $end
$scope function ariane_pkg_extract_transfer_size $end
$upscope $end
$scope begin gen_no_mmu $end
$upscope $end
$scope module i_load_unit $end
$var wire 1 ' clk_i $end
$var wire 3 u" commit_tran_id_i [2:0] $end
$var wire 1 D" dcache_wbuffer_not_ni_i $end
$var wire 1 a" dtlb_hit_i $end
$var wire 22 v" dtlb_ppn_i [21:0] $end
$var wire 65 w" ex_i [64:0] $end
$var wire 1 H" flush_i $end
$var wire 1 x" inflight_stores $end
$var wire 34 y" paddr_i [33:0] $end
$var wire 1 z" paddr_ni $end
$var wire 35 {" req_port_i [34:0] $end
$var wire 1 - rst_ni $end
$var wire 1 |" sign_bit $end
$var wire 1 }" stall_ni $end
$var wire 1 ~" sv2v_tmp_52ECA [1:1] $end
$var wire 32 !# sv2v_tmp_82AC4 [32:1] $end
$var wire 1 n" valid_i $end
$var reg 65 "# ex_o [64:0] $end
$var reg 1 ## fp_sign_q $end
$var reg 2 $# idx_q [1:0] $end
$var reg 13 %# load_data_d [12:0] $end
$var reg 13 &# load_data_q [12:0] $end
$var reg 1 '# pop_ld_o $end
$var reg 77 (# req_port_o [76:0] $end
$var reg 32 )# result_o [31:0] $end
$var reg 1 *# signed_q $end
$var reg 4 +# state_d [3:0] $end
$var reg 4 ,# state_q [3:0] $end
$var reg 3 -# trans_id_o [2:0] $end
$var reg 1 .# translation_req_o $end
$var reg 1 /# valid_o $end
$scope function ariane_pkg_extract_transfer_size $end
$upscope $end
$scope function ariane_pkg_is_inside_nonidempotent_regions $end
$scope begin sv2v_autoblock_1 $end
$upscope $end
$upscope $end
$scope function ariane_pkg_range_check $end
$upscope $end
$scope function sv2v_cast_65 $end
$upscope $end
$scope begin gen_sign_bits[0] $end
$upscope $end
$scope begin gen_sign_bits[1] $end
$upscope $end
$scope begin gen_sign_bits[2] $end
$upscope $end
$scope begin gen_sign_bits[3] $end
$upscope $end
$scope begin load_control $end
$upscope $end
$scope begin p_regs $end
$upscope $end
$scope begin rvalid_output $end
$upscope $end
$upscope $end
$scope module i_pipe_reg_load $end
$var wire 1 ' clk_i $end
$var wire 101 0# d_i [100:0] $end
$var wire 1 - rst_ni $end
$var reg 101 1# d_o [100:0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope module i_pipe_reg_store $end
$var wire 1 ' clk_i $end
$var wire 101 2# d_i [100:0] $end
$var wire 1 - rst_ni $end
$var reg 101 3# d_o [100:0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope module i_store_unit $end
$var wire 1 4# amo_buffer_ready $end
$var wire 1 5# amo_buffer_valid $end
$var wire 65 6# amo_resp_i [64:0] $end
$var wire 1 ?" amo_valid_commit_i $end
$var wire 1 ' clk_i $end
$var wire 1 B" commit_i $end
$var wire 1 a" dtlb_hit_i $end
$var wire 65 7# ex_i [64:0] $end
$var wire 1 H" flush_i $end
$var wire 34 8# paddr_i [33:0] $end
$var wire 12 9# page_offset_i [11:0] $end
$var wire 35 :# req_port_i [34:0] $end
$var wire 32 ;# result_o [31:0] $end
$var wire 1 - rst_ni $end
$var wire 1 <# st_ready $end
$var wire 1 =# store_buffer_valid $end
$var wire 1 r" valid_i $end
$var wire 32 ># vaddr_o [31:0] $end
$var wire 3 ?# trans_id_o [2:0] $end
$var wire 1 @# store_buffer_ready $end
$var wire 1 A# store_buffer_empty_o $end
$var wire 77 B# req_port_o [76:0] $end
$var wire 1 C# page_offset_matches_o $end
$var wire 1 D# no_st_pending_o $end
$var wire 85 E# lsu_ctrl_i [84:0] $end
$var wire 1 F# instr_is_amo $end
$var wire 1 G# commit_ready_o $end
$var wire 135 H# amo_req_o [134:0] $end
$var reg 4 I# amo_op_d [3:0] $end
$var reg 4 J# amo_op_q [3:0] $end
$var reg 65 K# ex_o [64:0] $end
$var reg 1 L# pop_st_o $end
$var reg 4 M# st_be_n [3:0] $end
$var reg 4 N# st_be_q [3:0] $end
$var reg 32 O# st_data_n [31:0] $end
$var reg 32 P# st_data_q [31:0] $end
$var reg 2 Q# st_data_size_n [1:0] $end
$var reg 2 R# st_data_size_q [1:0] $end
$var reg 1 S# st_valid $end
$var reg 1 T# st_valid_without_flush $end
$var reg 2 U# state_d [1:0] $end
$var reg 2 V# state_q [1:0] $end
$var reg 3 W# trans_id_n [2:0] $end
$var reg 3 X# trans_id_q [2:0] $end
$var reg 1 Y# translation_req_o $end
$var reg 1 Z# valid_o $end
$scope function ariane_pkg_data_align $end
$upscope $end
$scope function ariane_pkg_extract_transfer_size $end
$upscope $end
$scope function ariane_pkg_is_amo $end
$upscope $end
$scope module i_amo_buffer $end
$var wire 72 [# amo_data_out [71:0] $end
$var wire 4 \# amo_op_i [3:0] $end
$var wire 65 ]# amo_resp_i [64:0] $end
$var wire 1 ^# amo_valid $end
$var wire 1 ?" amo_valid_commit_i $end
$var wire 1 ' clk_i $end
$var wire 32 _# data_i [31:0] $end
$var wire 2 `# data_size_i [1:0] $end
$var wire 1 a# flush_amo_buffer $end
$var wire 1 H" flush_i $end
$var wire 34 b# paddr_i [33:0] $end
$var wire 1 4# ready_o $end
$var wire 1 - rst_ni $end
$var wire 1 5# valid_i $end
$var wire 1 D# no_st_pending_i $end
$var wire 135 c# amo_req_o [134:0] $end
$var wire 72 d# amo_data_in [71:0] $end
$upscope $end
$scope module store_buffer_i $end
$var wire 4 e# be_i [3:0] $end
$var wire 1 ' clk_i $end
$var wire 1 B" commit_i $end
$var wire 32 f# data_i [31:0] $end
$var wire 2 g# data_size_i [1:0] $end
$var wire 1 H" flush_i $end
$var wire 34 h# paddr_i [33:0] $end
$var wire 12 i# page_offset_i [11:0] $end
$var wire 35 j# req_port_i [34:0] $end
$var wire 1 - rst_ni $end
$var wire 1 A# store_buffer_empty_o $end
$var wire 1 k# sv2v_tmp_80AC7 [1:1] $end
$var wire 1 l# sv2v_tmp_A682E [1:1] $end
$var wire 1 m# sv2v_tmp_F170F [1:1] $end
$var wire 1 =# valid_i $end
$var wire 1 T# valid_without_flush_i $end
$var wire 12 n# sv2v_tmp_9099D [12:1] $end
$var wire 4 o# sv2v_tmp_8DCF7 [4:1] $end
$var wire 22 p# sv2v_tmp_71805 [22:1] $end
$var wire 32 q# sv2v_tmp_6B7F3 [32:1] $end
$var wire 2 r# sv2v_tmp_51F0D [2:1] $end
$var reg 584 s# commit_queue_n [583:0] $end
$var reg 584 t# commit_queue_q [583:0] $end
$var reg 3 u# commit_read_pointer_n [2:0] $end
$var reg 3 v# commit_read_pointer_q [2:0] $end
$var reg 1 G# commit_ready_o $end
$var reg 4 w# commit_status_cnt_n [3:0] $end
$var reg 4 x# commit_status_cnt_q [3:0] $end
$var reg 3 y# commit_write_pointer_n [2:0] $end
$var reg 3 z# commit_write_pointer_q [2:0] $end
$var reg 1 D# no_st_pending_o $end
$var reg 1 C# page_offset_matches_o $end
$var reg 1 @# ready_o $end
$var reg 77 {# req_port_o [76:0] $end
$var reg 292 |# speculative_queue_n [291:0] $end
$var reg 292 }# speculative_queue_q [291:0] $end
$var reg 2 ~# speculative_read_pointer_n [1:0] $end
$var reg 2 !$ speculative_read_pointer_q [1:0] $end
$var reg 3 "$ speculative_status_cnt_n [2:0] $end
$var reg 3 #$ speculative_status_cnt_q [2:0] $end
$var reg 2 $$ speculative_write_pointer_n [1:0] $end
$var reg 2 %$ speculative_write_pointer_q [1:0] $end
$scope function sv2v_cast_79500 $end
$upscope $end
$scope begin core_if $end
$var reg 5 &$ speculative_status_cnt [4:0] $end
$scope begin sv2v_autoblock_1 $end
$var reg 32 '$ i [31:0] $end
$upscope $end
$upscope $end
$scope begin p_commit $end
$upscope $end
$scope begin p_spec $end
$upscope $end
$scope begin store_if $end
$var reg 9 ($ commit_status_cnt [8:0] $end
$upscope $end
$scope begin sv2v_autoblock_2 $end
$var reg 2 )$ _sv2v_jump [0:1] $end
$scope begin address_checker $end
$scope begin sv2v_autoblock_3 $end
$var reg 32 *$ i [31:0] $end
$scope begin sv2v_autoblock_4 $end
$var reg 32 +$ _sv2v_value_on_break [31:0] $end
$upscope $end
$upscope $end
$scope begin sv2v_autoblock_5 $end
$var reg 32 ,$ i [31:0] $end
$scope begin sv2v_autoblock_6 $end
$var reg 32 -$ _sv2v_value_on_break [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin store_control $end
$upscope $end
$upscope $end
$scope module lsu_bypass_i $end
$var wire 1 ' clk_i $end
$var wire 1 H" flush_i $end
$var wire 85 .$ lsu_req_i [84:0] $end
$var wire 1 ]" lsu_req_valid_i $end
$var wire 1 '# pop_ld_i $end
$var wire 1 L# pop_st_i $end
$var wire 1 /$ ready_o $end
$var wire 1 - rst_ni $end
$var wire 1 0$ empty $end
$var reg 85 1$ lsu_ctrl_o [84:0] $end
$var reg 170 2$ mem_n [169:0] $end
$var reg 170 3$ mem_q [169:0] $end
$var reg 1 4$ read_pointer $end
$var reg 1 5$ read_pointer_n $end
$var reg 1 6$ read_pointer_q $end
$var reg 2 7$ status_cnt [1:0] $end
$var reg 2 8$ status_cnt_n [1:0] $end
$var reg 2 9$ status_cnt_q [1:0] $end
$var reg 1 :$ write_pointer $end
$var reg 1 ;$ write_pointer_n $end
$var reg 1 <$ write_pointer_q $end
$scope begin output_assignments $end
$upscope $end
$scope begin sv2v_autoblock_1 $end
$upscope $end
$upscope $end
$scope begin data_misaligned_detection $end
$upscope $end
$scope begin which_op $end
$upscope $end
$upscope $end
$scope task load_commit $end
$var reg 3 =$ commit_id [2:0] $end
$upscope $end
$scope task lower_load_request $end
$upscope $end
$scope task lower_store_request $end
$upscope $end
$scope task raise_load_request $end
$var reg 32 >$ addr [31:0] $end
$var reg 3 ?$ commit_id [2:0] $end
$upscope $end
$scope task raise_store_request $end
$var reg 32 @$ addr [31:0] $end
$var reg 3 A$ commit_id [2:0] $end
$var reg 32 B$ data [31:0] $end
$upscope $end
$scope task serve_load_1 $end
$upscope $end
$scope task serve_load_2 $end
$var reg 32 C$ data [31:0] $end
$upscope $end
$scope task serve_load_3 $end
$upscope $end
$scope task serve_store_1 $end
$upscope $end
$scope task serve_store_2 $end
$upscope $end
$scope task store_commit $end
$upscope $end
$scope task store_decommit $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx C$
bx B$
bx A$
bx @$
bx ?$
bx >$
bx =$
x<$
x;$
x:$
bx 9$
bx 8$
bx 7$
x6$
x5$
x4$
bx 3$
bx 2$
bx 1$
x0$
x/$
bx0000xxxxxxxxxxxxxxx .$
b11 -$
b100 ,$
b111 +$
b1000 *$
b0 )$
b0xxxx ($
bx '$
b0xxx &$
bx %$
bx $$
bx #$
bx "$
bx !$
bx ~#
bx }#
bx |#
bx01xxxxxx00 {#
bx z#
bx y#
bx x#
bx w#
bx v#
bx u#
bx t#
bx s#
bx r#
bx q#
bx p#
bx o#
bx n#
0m#
0l#
1k#
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx j#
bx i#
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx h#
bx g#
bx f#
bx e#
bx00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx d#
b0zzzzzz000000000000000000000000000000zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz00000000000000000000000000000000zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz c#
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx b#
0a#
bx `#
bx _#
z^#
b0 ]#
bx \#
bz [#
0Z#
0Y#
bx X#
bx W#
bx V#
bx U#
0T#
0S#
bx R#
b11 Q#
bx P#
b0 O#
bx N#
bx M#
0L#
b0 K#
bx J#
b0 I#
b0zzzzzz000000000000000000000000000000zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz00000000000000000000000000000000zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz H#
xG#
0F#
bx E#
xD#
0C#
bx01xxxxxx00 B#
xA#
x@#
bx ?#
bx >#
0=#
x<#
b0 ;#
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx :#
bx 9#
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 8#
b0 7#
b0 6#
05#
z4#
b0xxx0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 3#
b0xxx0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 2#
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0 1#
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000000000000000000000000000000000000000000000000000000000 0#
0/#
0.#
bx -#
bx ,#
bx +#
x*#
bx )#
bx00xxxxxxxxxxxxxxxxxxxx00000000000000000000000000000000x00xxxx1100 (#
0'#
bx &#
bx %#
bx $#
x##
b0 "#
b0 !#
0~"
0}"
x|"
bx {"
0z"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx y"
1x"
b0 w"
bx v"
bx u"
xt"
xs"
xr"
bx q"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx p"
b0 o"
xn"
0m"
b0 l"
bx k"
b0 j"
b0 i"
b0 h"
b0 g"
b0 f"
b0 e"
b0 d"
b0 c"
bx b"
1a"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx `"
bx _"
b0 ^"
x]"
bx \"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ["
bx Z"
xY"
bx X"
bx W"
bx V"
xU"
bx T"
b0 S"
0R"
b0 Q"
b0 P"
b0 O"
b0 N"
0M"
b0 L"
0K"
b0 J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
xB"
0A"
0@"
0?"
b0 >"
bx ="
bx <"
bx ;"
x:"
bx 9"
x8"
bx 7"
x6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
b100000 ,"
x+"
x*"
x)"
x("
bx '"
bx &"
x%"
b1110010101011111111011111100101 $"
b11100010111101111000010011000101 #"
b1111100111111011110100111111001 ""
b1110110110101000101011111101101 !"
b111011001000111111000101110110 ~
b111100111110001100000001 }
b10000101110101111001101000001011 |
b11011110011101010000001010111100 {
b10110010110000101000010001100101 z
b1100011010010111111100111000110 y
b1110101110001010000110111101011 x
b111100001000001111001101111000 w
b100000110001001011001101000001 v
b1111001011010001011110111110010 u
b11100101011100110000101011001010 t
b10001100001000100100100100011 s
b1110111111111110100100011101 r
b10000001000101110100101000000010 q
b110101100111111101110101101011 p
b110101110010111101100001101 o
b10000110101111000011100000001101 n
b11001011001000000011111010010110 m
b1010101011110000100010110101010 l
b11000000001110110010001010000000 k
b10110001111011110110001001100011 j
b10010110101010110101100000101101 i
b101110010110000100100101011100 h
b11110100000000000111101011101000 g
b1111001001100000110100111110010 f
b10001001001100101101011000010010 e
b10000100100001001101011000001001 d
b10010000101010011010100100100 c
xb
b10111011110100100111001001110111 a
b11010101000100111101001010101010 `
b11100011001101110010010011000110 _
b1000110001011011111011110001100 ^
b11110100011011100110100111101 ]
b110110101111100110100001101 \
b10111000100101111011111001110001 [
b10101000011111101110100101010 Z
b10001001001101110101001000010010 Y
b1010111000101010001001110101110 X
b1011011000000100110010110110110 W
b11000100100010100001001010001001 V
b11101100010010110011010011011000 U
b1000101001011100110000110001010 T
b10011110001100010100110000111100 S
b101000010010110010100001010 R
b11100111110001010111001011001111 Q
b11010111010101100011111010101110 P
b11101010101001100010101011010101 O
b1000110110111111001100110001101 N
b10101001101001111101011001010011 M
b10001001100000111011100000010011 L
b11001110110011001100110010011101 K
b10000011001000010000100100000 J
b101011100111000011100001010 I
b10110010101001110010011001100101 H
b11011110100011100010100010111101 G
b11100010110010100100111011000101 F
b11100111011101101001011011001110 E
b1000111111011001101101110001111 D
b10110001111100000101011001100011 C
b11000000100010010101111010000001 B
xA
bx @
bx ?
x>
x=
x<
bx ;
x:
x9
x8
x7
bx 6
b1100 5
bx 4
x3
x2
x1
bx 0
bx /
bx .
1-
bx ,
bx +
bx *
bx )
bx (
1'
bx &
b0 %
x$
x#
x"
bx !
$end
#10
0'
#20
bx00000000000000000000 v"
b0 >#
b0 9#
b0 i#
b0 q"
0s"
0r"
0n"
b0 M#
b0 W#
b0x0000001100 (#
0|"
b0x0100000000 B#
b0x0100000000 {#
1A#
b0 w#
b0 s#
b0 y#
b0 u#
1D#
1G#
b0 ($
b0 E#
b0 1$
b0 8$
0;$
05$
b0 2$
04$
0:$
b0 7$
b0 )#
b0 0#
b0 -#
b0 %#
b0 +#
b0 U#
b11 -$
b100 ,$
b111 +$
b1000 *$
b0 |#
b0 $$
b0 ~#
b0 "$
1<#
1@#
b0 &$
b1 %
09
0*"
0:
0+"
07
0("
08
0)"
b0 6
b0 T"
b0 '"
0%"
b0 &"
0=
0>
b0 @
b0 ?
0A
0##
0*#
b0 $#
b0 x#
b0 z#
b0 n#
b0 p#
b0 q#
b0 o#
b0 r#
b0 v#
b0 t#
b0 #$
b0 %$
b0 !$
b0 }#
06$
0<$
1U"
1/$
10$
b0 9$
b0 3$
b0 3#
b0 1#
b0 &#
b0 ,#
b0 J#
b0 \#
b0 2#
b0 ?#
b0 X#
b0 R#
b0 `#
b0 g#
b0 P#
b0 _#
b0 f#
b0 N#
b0 e#
b0 V#
0t"
b0 d#
b0 p"
b0 y"
b0 8#
b0 b#
b0 h#
b0 k"
b0 :#
b0 j#
b0 {"
1<
1b
b0 X"
b0 W"
b0 V"
b0 .$
0]"
b0 \"
b0 b"
b0 Z"
b0 _"
b0 u"
0B"
0Y"
b0 ["
b0 `"
1'
0$
03
0#
02
0"
01
b0 !
b0 ;
b0 0
b10011 *
b0 &
0-
#30
0'
#40
b10 %
1'
#50
0'
#60
b11 d#
b11 R#
b11 `#
b11 g#
b11 %
b10010000101010011010100100100 -"
b10010000101010011010100100100 0"
b0 /"
b0 ."
b0 1"
b10011 2"
16"
b10011 5"
08"
b10011 7"
0:"
b10011 9"
1'
1-
b10101000000000010101010000011 *
b11 +
1"
11
b10011 !
b10011 ;
b10011 0
b10 (
b10101 ,
b1000 /
b0 .
b100010101000 )
b1110100010001011011001111100100 5
b0 4
#70
0'
#80
b100 %
b1010111000101010001001110101110 q
0<
0b
b11 @
1A
b10010000101010011011001110100 ?
b101010000 1"
b10101000000000010101010000011 2"
18"
b10101000000000010101010000011 7"
b10101000000000010101010000011 9"
1'
b11100001100111100111111110010011 *
b10011 +
1$
13
1#
12
b10101000000000010101010000011 !
b10101000000000010101010000011 ;
b10101000000000010101010000011 0
b111 (
b11111 ,
b11110 .
b11100001100 )
b11 &
b1100110100100010111001010111100 5
b1 4
#90
0'
#100
b101 %
b1111 M#
bx00010010000101010011 v"
b10010000101010011011001110100 q"
1s"
b11 -$
b100 ,$
b111 +$
b1000 *$
b1 +#
1.#
b10010000101010011011001110100 >#
b11001110100 9#
b11001110100 i#
1n"
b11001110100000000000000000000000000000000000000000000000000000000x1011111000 (#
b10 Q#
b1 W#
b1000100100001010100110110011101000000000000000000000000000000000001111000100100101001 E#
b1000100100001010100110110011101000000000000000000000000000000000001111000100100101001 1$
b1 8$
1;$
b1 7$
1:$
b1000100100001010100110110011101000000000000000000000000000000000001111000100100101001 2$
b10010000101010011011001110100 k"
b1 W"
b1000100100001010100110110011101000000000000000000000000000000000001111000100100101001 .$
1]"
b100100101000100100001010100110110011101000000000000000000000000000000000000000000000000000000000000000000001 \"
b100100101000100100001010100110110011101000000000000000000000000000000000000000000000000000000000000000000001 b"
b1 ?$
b10010000101010011011001110100 >$
b10 @
1>
17
1("
18
1)"
b10010000101010011011001110100 6
b10010000101010011011001110100 T"
b10010000101010011011001110100 '"
1'
0"
01
b11100001100111100111111110010011 !
b11100001100111100111111110010011 ;
b11100001100111100111111110010011 0
b101 (
b11010 ,
b11011 /
b1111 .
b10000010001 )
b0 &
b1001001111101101001110010010100 5
b10 4
#110
0'
#120
b11 -$
b100 ,$
b111 +$
b1000 *$
1t"
b10010000101010011011001110100 p"
b10010000101010011011001110100 y"
b10010000101010011011001110100 8#
b10010000101010011011001110100 b#
b10010000101010011011001110100 h#
b100100001010100110110011101000000000000000000000000000000000010 d#
b10 R#
b10 `#
b10 g#
b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 2#
b1 ?#
b1 X#
b1111 N#
b1111 e#
b1 ,#
1<$
0U"
0/$
00$
b1 9$
b1000100100001010100110110011101000000000000000000000000000000000001111000100100101001 3$
b110 %
b10010000101010011011001110100 q"
1s"
1n"
b11001110100000001001000010101001100000000000000000000000000000000x1011111000 (#
1.#
b1 +#
b1000100100001010100110110011101000000000000000000000000000000000001111000100100101001 E#
b1000100100001010100110110011101000000000000000000000000000000000001111000100100101001 1$
b1 8$
1;$
b1000100100001010100110110011101000000000000000000000000000000000001111000100100101001 2$
1:$
b1 7$
b10 W"
b1 Z"
b1 _"
b1 u"
b1 =$
b100100001010100110110011101000000000000000000000000000000000001111000100100101001 .$
0]"
b1 @
07
0("
1'
0$
03
0#
02
b1100 (
b10110 ,
b110 /
b1010 .
b101100001111 )
b10 &
b10001010001101001001000101101100 5
b11 4
#130
0'
#140
b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 3#
b111 %
b0 8$
15$
b0 7$
14$
b100100001010100110110011101000000000000000000000000000000000001111000100100101001 2$
b10000100101 %#
1'#
b10 +#
b11001110100000001001000010101001100000000000000000000000000000000x1011111000 (#
1.#
b10000000000000000000000000000000000 {"
b0 W"
b0 Z"
b0 _"
b0 u"
b0 =$
b1 V"
b1000000000000000000000000000000000000000000000000000000000000000000000 ["
b1000000000000000000000000000000000000000000000000000000000000000000000 `"
0>
1=
19
1*"
b0 @
1'
1#
12
b100 (
b11 ,
b10010 /
b11100 .
b1001010101 )
b1 &
b11101001001101101011000101000100 5
b100 4
#150
0'
#160
1|"
b10010000101010011011001110100 q"
1s"
0n"
b1 -#
b100100001010100110110011101000000000000000000000000000000000001111000100100101001 E#
b100100001010100110110011101000000000000000000000000000000000001111000100100101001 1$
1*#
b10000100101 &#
b10 ,#
16$
1U"
1/$
10$
b0 9$
b100100001010100110110011101000000000000000000000000000000000001111000100100101001 3$
b1000 %
b0 8$
15$
b100100001010100110110011101000000000000000000000000000000000001111000100100101001 2$
14$
b0 7$
b11011110101011011011111011101111 )#
b10011101111010101101101111101110111100000000000000000000000000000000000000000000000000000000000000000 0#
1/#
0'#
b11001110100000001001000010101001100000000000000000000000000000000x0011111001 (#
0.#
b10000100101 %#
b0 +#
b1110111101010110110111110111011110 {"
b10 V"
b111011110101011011011111011101111000000000000000000000000000000000000 ["
b111011110101011011011111011101111000000000000000000000000000000000000 `"
b11011110101011011011111011101111 C$
09
0*"
0=
1'
1$
13
b1110 (
b0 ,
b10101 /
b11111 .
b101111011101 )
b10 &
b10001100100101000101110000011100 5
b101 4
#170
0'
#180
b10011101111010101101101111101110111100000000000000000000000000000000000000000000000000000000000000000 1#
b0 ,#
b1001 %
0|"
b0 )#
b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0#
0/#
b11001110100000001001000010101001100000000000000000000000000000000x0011111000 (#
b0 +#
b0 {"
b0 V"
b0 ["
b0 `"
1<
1b
1'
0$
03
b100 (
b101 ,
b11110 /
b10000 .
b100100111111 )
b11 &
b10111011000100001111000111110100 5
b110 4
#190
0'
#200
b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 1#
b1010 %
b1110101110001010000110000001001 |
b1110101110001010000110000001001 -"
b1110101110001010000110111101011 0"
b11111111111111111111111000011001 /"
b111 ."
b11111111111111111111111000011001 1"
b11100001100111100111111110010011 2"
b11100001100111100111111110010011 5"
08"
b11100001100111100111111110010011 7"
b11100001100111100111111110010011 9"
1'
b11101011111010010010000100100011 *
b100011 +
1"
11
0#
02
b10 (
b11011 ,
b11111 /
b1001 .
b11101000010 )
b1 &
b1001010000110111101001011001100 5
b111 4
#210
0'
#220
b1011 %
b11001011001000000011111010010110 H
0<
0b
b11 @
0A
b11001011001000000011110100111000 ?
b11111111111111111111111010100010 3"
b11101011111010010010000100100011 4"
1:"
b11101011111010010010000100100011 9"
1'
b11010101100010011110100011 *
b11101011111010010010000100100011 !
b11101011111010010010000100100011 ;
b11101011111010010010000100100011 0
b10 (
b1 ,
b11010 /
b10110 .
b1111 )
b10111011010100000101111010100100 5
b1000 4
#230
0'
#240
b1100 %
bx11001011001000000011 v"
05$
04$
b110100111000000001001000010101001100000000000000000000000000000000x0011111000 (#
b11 -$
b100 ,$
b111 +$
b1000 *$
1L#
1Y#
b1 U#
b11001011001000000011110100111000 >#
b110100111000 9#
b110100111000 i#
1r"
b11001011001000000011110100111000 q"
1s"
b11001010111111101100101011111110 O#
b10 W#
b1110010110010000000111101001110000110010101111111011001010111111101111001000100111010 E#
b1110010110010000000111101001110000110010101111111011001010111111101111001000100111010 1$
b0 8$
0;$
b0 7$
0:$
b1100101100100000001111010011100001100101011111110110010101111111011110010001001110100000100100001010100110110011101000000000000000000000000000000000001111000100100101001 2$
b11001011001000000011110100111000 k"
b1 X"
b1110010110010000000111101001110000110010101111111011001010111111101111001000100111010 .$
1]"
b1000100111110010110010000000111101001110001100101011111110110010101111111000000000000000000000000000000000010 \"
b1000100111110010110010000000111101001110001100101011111110110010101111111000000000000000000000000000000000010 b"
b10 A$
b11001010111111101100101011111110 B$
b11001011001000000011110100111000 @$
b10 @
b1 &"
17
1("
08
0)"
b11001011001000000011110100111000 6
b11001011001000000011110100111000 T"
b11001011001000000011110100111000 '"
1'
0"
01
1$
13
1#
12
b11010101100010011110100011 !
b11010101100010011110100011 ;
b11010101100010011110100011 0
b110 (
b101 ,
b1100 /
b1011 .
b100000111 )
b1001111101011111010101111100 5
b1001 4
#250
0'
#260
b1 "$
b1 &$
b1 $$
b11001011001000000011110100111000110010101111111011001010111111101111101 |#
1C#
1=#
b110100111000001100101100100000001100000000000000000000000000000000x0011111000 (#
1T#
1S#
1Z#
b11 -$
b100 ,$
b111 +$
b1000 *$
06$
0<$
b1100101100100000001111010011100001100101011111110110010101111111011110010001001110100000100100001010100110110011101000000000000000000000000000000000001111000100100101001 3$
b10100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 2#
b10 ?#
b10 X#
b11001010111111101100101011111110 P#
b11001010111111101100101011111110 _#
b11001010111111101100101011111110 f#
b1 V#
b110010110010000000111101001110001100101011111110110010101111111010 d#
b11001011001000000011110100111000 p"
b11001011001000000011110100111000 y"
b11001011001000000011110100111000 8#
b11001011001000000011110100111000 b#
b11001011001000000011110100111000 h#
b1101 %
05$
b11001011001000000011110100111000 q"
1s"
0r"
b0 U#
0L#
0Y#
b110010110010000000111101001110000110010101111111011001010111111101111001000100111010 E#
b110010110010000000111101001110000110010101111111011001010111111101111001000100111010 1$
b0 8$
0;$
b0 7$
b1100101100100000001111010011100001100101011111110110010101111111011110010001001110100000100100001010100110110011101000000000000000000000000000000000001111000100100101001 2$
04$
0:$
b10 X"
b110010110010000000111101001110000110010101111111011001010111111101111001000100111010 .$
0]"
b1 @
07
0("
1'
0$
03
0#
02
b11 (
b1001 ,
b10011 /
b11110 .
b100111010100 )
b101000011111111111011101010100 5
b1010 4
#270
0'
#280
0=#
0A#
b0 -$
b0 )$
b0 ,$
b111 +$
b1000 *$
1C#
b11001011001000000011110100111000110010101111111011001010111111101111101 s#
0T#
0S#
b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 2#
0Z#
b1 #$
b1 %$
b11001011001000000011110100111000110010101111111011001010111111101111101 }#
b0 V#
b10100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 3#
b1110 %
b1 w#
b1 ($
b1 y#
b1 ~#
b11001011001000000011110100111000110010101111111011001010111111101111100 |#
b1 $$
b0 "$
b0 &$
b11 X"
1B"
1Y"
b0 @
1'
b1010 (
b11011 ,
b0 /
b11010 .
b10101011010 )
b10 &
b101110000011011100010000101100 5
b1011 4
#290
0'
#300
b11 -$
b100 ,$
b0 +$
b0 )$
b0 *$
1C#
b110100111000001100101100100000001111001010111111101100101011111110x1111111000 B#
b110100111000001100101100100000001111001010111111101100101011111110x1111111000 {#
0D#
b1 x#
b1 z#
b110100111000 n#
b11001011001000000011 p#
b11001010111111101100101011111110 q#
b1111 o#
b10 r#
b11001011001000000011110100111000110010101111111011001010111111101111101 t#
b0 #$
b1 !$
b11001011001000000011110100111000110010101111111011001010111111101111100 }#
b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 3#
b1111 %
b1 w#
b11001011001000000011110100111000110010101111111011001010111111101111101 s#
b1 y#
b1 ($
b11001011001000000011110100111000110010101111111011001010111111101111100 |#
b1 ~#
b0 "$
b0 &$
b0 X"
0B"
0Y"
b0 &"
1%"
1:
1+"
1<
1b
1'
1$
13
1#
12
b11 (
b11111 ,
b11111 /
b11011 .
b1111101111 )
b0 &
b110011111010101011110000000100 5
b1100 4
#310
0'
#320
b10000 %
b0 w#
b0 ($
b1 u#
b11001011001000000011110100111000110010101111111011001010111111101111100 s#
b110100111000001100101100100000001111001010111111101100101011111110x1111111000 B#
b110100111000001100101100100000001111001010111111101100101011111110x1111111000 {#
b10000000000000000000000000000000000 :#
b10000000000000000000000000000000000 j#
b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ["
b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 `"
b11110100000000000111101011101000 ]
0:
0+"
0%"
0<
0b
b11 @
b11110100000000000111101100010111 ?
b101111 3"
b11010101100010011110100011 4"
b11010101100010011110100011 9"
1'
b10100100000000000010010010100011 *
1"
11
0$
03
b10 (
b11100 ,
b0 /
b0 .
b10100101001 )
b1 &
b11100011000011100011111011011100 5
b1101 4
#330
0'
#340
1A#
1D#
b0 x#
b0 n#
b0 p#
b0 q#
b0 o#
b0 r#
b1 v#
b11001011001000000011110100111000110010101111111011001010111111101111100 t#
b10001 %
bx11110100000000000111 v"
15$
14$
b101100010111001100101100100000001100000000000000000000000000000000x0011111000 (#
b11 -$
b100 ,$
b111 +$
b1000 *$
0C#
1L#
1Y#
b1 U#
b11110100000000000111101100010111 >#
b101100010111 9#
b101100010111 i#
1r"
b11110100000000000111101100010111 q"
1s"
b110111101000000000001111011000101111 o"
1m"
b11111110110010101111111011001010 O#
b0 w#
b0x0100000000 B#
b0x0100000000 {#
b11001011001000000011110100111000110010101111111011001010111111101111100 s#
b1 u#
b0 ($
b1111101000000000001111011000101110110010101111111011001010111111101111001000100111010 E#
b1111101000000000001111011000101110110010101111111011001010111111101111001000100111010 1$
b0 8$
1;$
b0 7$
1:$
b1100101100100000001111010011100001100101011111110110010101111111011110010001001110100111101000000000001111011000101110110010101111111011001010111111101111001000100111010 2$
b11110100000000000111101100010111 k"
b0 :#
b0 j#
b1 X"
b1111101000000000001111011000101110110010101111111011001010111111101111001000100111010 .$
1]"
b1000100111111101000000000001111011000101111100101011111110110010101111111000000000000000000000000000000000010 \"
b1000100111111101000000000001111011000101111100101011111110110010101111111000000000000000000000000000000000010 b"
b11110100000000000111101100010111 @$
b0 ["
b0 `"
b10 @
b1 &"
17
1("
b11110100000000000111101100010111 6
b11110100000000000111101100010111 T"
b11110100000000000111101100010111 '"
1'
0"
01
1$
13
b10100100000000000010010010100011 !
b10100100000000000010010010100011 ;
b10100100000000000010010010100011 0
b11 (
b10010 ,
b101 /
b100 .
b100100110011 )
b0 &
b10110001100110111010110010110100 5
b1110 4
#350
0'
#360
b1 "$
b1 &$
b10 $$
b111101000000000001111011000101111111111011001010111111101100101011111010011001011001000000011110100111000110010101111111011001010111111101111100 |#
b101100010111001111010000000000011100000000000000000000000000000000x0011111000 (#
1=#
1C#
b11 -$
b100 ,$
b111 +$
b1000 *$
1T#
1S#
b10100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 2#
1Z#
b11110100000000000111101100010111 p"
b11110100000000000111101100010111 y"
b11110100000000000111101100010111 8#
b11110100000000000111101100010111 b#
b11110100000000000111101100010111 h#
b111101000000000001111011000101111111111011001010111111101100101010 d#
b11111110110010101111111011001010 P#
b11111110110010101111111011001010 _#
b11111110110010101111111011001010 f#
b1 V#
16$
1<$
b1100101100100000001111010011100001100101011111110110010101111111011110010001001110100111101000000000001111011000101110110010101111111011001010111111101111001000100111010 3$
b10010 %
15$
b11110100000000000111101100010111 q"
1s"
0r"
0m"
b0 o"
b0 U#
0L#
0Y#
b111101000000000001111011000101110110010101111111011001010111111101111001000100111010 E#
b111101000000000001111011000101110110010101111111011001010111111101111001000100111010 1$
b0 8$
1;$
b0 7$
b1100101100100000001111010011100001100101011111110110010101111111011110010001001110100111101000000000001111011000101110110010101111111011001010111111101111001000100111010 2$
14$
1:$
b10 X"
b111101000000000001111011000101110110010101111111011001010111111101111001000100111010 .$
0]"
b1 @
07
0("
1'
0$
03
b110 (
b11 ,
b1100 /
b10111 .
b10000010 )
b11010000011000100110010110001100 5
b1111 4
#370
0'
#380
0=#
0A#
b0 )$
b1 -$
b1 ,$
b111 +$
b1000 *$
1C#
b111101000000000001111011000101111111111011001010111111101100101011111010011001011001000000011110100111000110010101111111011001010111111101111100 s#
0T#
0S#
b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 2#
0Z#
b1 #$
b10 %$
b111101000000000001111011000101111111111011001010111111101100101011111010011001011001000000011110100111000110010101111111011001010111111101111100 }#
b10100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 3#
b0 V#
b10011 %
b1 w#
b1 ($
b10 y#
b10 ~#
b111101000000000001111011000101111111111011001010111111101100101011111000011001011001000000011110100111000110010101111111011001010111111101111100 |#
b10 $$
b0 "$
b0 &$
b11 X"
1B"
1Y"
b0 @
1'
b1010 (
b11001 /
b10011 .
b101111100101 )
b10 &
b11001000010111011100100101100100 5
b10000 4
#390
0'
#400
b11 -$
b100 ,$
b0 )$
b1 +$
b1 *$
1C#
b101100010111001111010000000000011111111110110010101111111011001010x1111111000 B#
b101100010111001111010000000000011111111110110010101111111011001010x1111111000 {#
0D#
b1 x#
b10 z#
b101100010111 n#
b11110100000000000111 p#
b11111110110010101111111011001010 q#
b1111 o#
b10 r#
b111101000000000001111011000101111111111011001010111111101100101011111010011001011001000000011110100111000110010101111111011001010111111101111100 t#
b0 #$
b10 !$
b111101000000000001111011000101111111111011001010111111101100101011111000011001011001000000011110100111000110010101111111011001010111111101111100 }#
b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 3#
b10100 %
b1 w#
b111101000000000001111011000101111111111011001010111111101100101011111010011001011001000000011110100111000110010101111111011001010111111101111100 s#
b10 y#
b1 ($
b111101000000000001111011000101111111111011001010111111101100101011111000011001011001000000011110100111000110010101111111011001010111111101111100 |#
b10 ~#
b0 "$
b0 &$
b0 X"
0B"
0Y"
1<
1b
1'
b101 (
b1100 ,
b1 /
b10001 .
b11000 )
b11 &
b11001000001101010011100000111100 5
b10001 4
#410
0'
#420
b10101 %
b10010000101010011010100100100 V
0<
0b
b11 @
b10010000101010010111101101101 ?
b11111111111111111111101001001001 3"
b10100100000000000010010010100011 4"
b10100100000000000010010010100011 9"
1'
b11111001001010010110100100011 *
1"
11
1$
13
0#
02
b10 (
b11 ,
b11001 /
b101 .
b100011111010 )
b1 &
b10100001101111000001001000010100 5
b10010 4
#430
0'
#440
b10110 %
bx00010010000101010010 v"
05$
04$
b111101101101001111010000000000011100000000000000000000000000000000x0011111000 (#
b11 -$
b100 ,$
b111 +$
b1000 *$
0C#
1L#
1Y#
b1 U#
b10010000101010010111101101101 >#
b111101101101 9#
b111101101101 i#
1r"
b10010000101010010111101101101 q"
1s"
b110000100100001010100101111011011011 o"
1m"
b1000100100001010100101111011011010110010101111111011001010111111101111001000100111010 E#
b1000100100001010100101111011011010110010101111111011001010111111101111001000100111010 1$
b0 8$
0;$
b0 7$
0:$
b1001000010101001011110110110101100101011111110110010101111111011110010001001110100111101000000000001111011000101110110010101111111011001010111111101111001000100111010 2$
b10010000101010010111101101101 k"
b1 X"
b1000100100001010100101111011011010110010101111111011001010111111101111001000100111010 .$
1]"
b1000100111000100100001010100101111011011011100101011111110110010101111111000000000000000000000000000000000010 \"
b1000100111000100100001010100101111011011011100101011111110110010101111111000000000000000000000000000000000010 b"
b10010000101010010111101101101 @$
b10 @
b10 &"
17
1("
b10010000101010010111101101101 6
b10010000101010010111101101101 T"
b10010000101010010111101101101 '"
1'
0"
01
0$
03
b11111001001010010110100100011 !
b11111001001010010110100100011 ;
b11111001001010010110100100011 0
b1110 (
b10010 ,
b11100 /
b10000 .
b110111111100 )
b1110111011100011011011011101100 5
b10011 4
#450
0'
#460
b1 "$
b1 &$
b11 $$
b1001000010101001011110110110111111110110010101111111011001010111110100111101000000000001111011000101111111111011001010111111101100101011111000011001011001000000011110100111000110010101111111011001010111111101111100 |#
1C#
1=#
b111101101101000001001000010101001000000000000000000000000000000000x0011111000 (#
1T#
1S#
b10100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 2#
1Z#
b11 -$
b100 ,$
b111 +$
b1000 *$
06$
0<$
b1001000010101001011110110110101100101011111110110010101111111011110010001001110100111101000000000001111011000101110110010101111111011001010111111101111001000100111010 3$
b1 V#
b100100001010100101111011011011111111011001010111111101100101010 d#
b10010000101010010111101101101 p"
b10010000101010010111101101101 y"
b10010000101010010111101101101 8#
b10010000101010010111101101101 b#
b10010000101010010111101101101 h#
b10111 %
05$
b10010000101010010111101101101 q"
1s"
0r"
0m"
b0 o"
b0 U#
0L#
0Y#
b100100001010100101111011011010110010101111111011001010111111101111001000100111010 E#
b100100001010100101111011011010110010101111111011001010111111101111001000100111010 1$
b0 8$
0;$
b0 7$
b1001000010101001011110110110101100101011111110110010101111111011110010001001110100111101000000000001111011000101110110010101111111011001010111111101111001000100111010 2$
04$
0:$
b10 X"
b100100001010100101111011011010110010101111111011001010111111101111001000100111010 .$
0]"
b1 @
07
0("
1'
b1100 (
b10000 ,
b10110 /
b11011 .
b1001111001 )
b10 &
b11010000000011000011011000100 5
b10100 4
#470
0'
#480
0=#
b0 )$
b10 -$
b10 ,$
b111 +$
b1000 *$
1C#
b1001000010101001011110110110111111110110010101111111011001010111110100111101000000000001111011000101111111111011001010111111101100101011111010011001011001000000011110100111000110010101111111011001010111111101111100 s#
0T#
0S#
b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 2#
0Z#
b1 #$
b11 %$
b1001000010101001011110110110111111110110010101111111011001010111110100111101000000000001111011000101111111111011001010111111101100101011111000011001011001000000011110100111000110010101111111011001010111111101111100 }#
b0 V#
b10100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 3#
b11000 %
b10 w#
b10 ($
b11 y#
b101100010111001111010000000000011111111110110010101111111011001010x1111111000 B#
b101100010111001111010000000000011111111110110010101111111011001010x1111111000 {#
b11 ~#
b1001000010101001011110110110111111110110010101111111011001010111110000111101000000000001111011000101111111111011001010111111101100101011111000011001011001000000011110100111000110010101111111011001010111111101111100 |#
b11 $$
b0 "$
b0 &$
b11 X"
1B"
1Y"
b1 &"
1%"
1:
1+"
b0 @
1'
1$
13
1#
12
b110 (
b10001 ,
b10100 /
b1100 .
b110101000011 )
b11 &
b10101110000101110000110011100 5
b10101 4
#490
0'
#500
b11 -$
b100 ,$
b0 )$
b10 +$
b10 *$
1C#
b10 x#
b11 z#
b1001000010101001011110110110111111110110010101111111011001010111110100111101000000000001111011000101111111111011001010111111101100101011111010011001011001000000011110100111000110010101111111011001010111111101111100 t#
b0 #$
b11 !$
b1001000010101001011110110110111111110110010101111111011001010111110000111101000000000001111011000101111111111011001010111111101100101011111000011001011001000000011110100111000110010101111111011001010111111101111100 }#
b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 3#
b11001 %
b1 w#
b10 u#
b101100010111001111010000000000011111111110110010101111111011001010x1111111000 B#
b101100010111001111010000000000011111111110110010101111111011001010x1111111000 {#
b1001000010101001011110110110111111110110010101111111011001010111110100111101000000000001111011000101111111111011001010111111101100101011111000011001011001000000011110100111000110010101111111011001010111111101111100 s#
b11 y#
b1 ($
b1001000010101001011110110110111111110110010101111111011001010111110000111101000000000001111011000101111111111011001010111111101100101011111000011001011001000000011110100111000110010101111111011001010111111101111100 |#
b11 ~#
b0 "$
b0 &$
b10000000000000000000000000000000000 :#
b10000000000000000000000000000000000 j#
b0 X"
0B"
0Y"
b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ["
b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 `"
0:
0+"
0%"
1<
1b
1'
0$
03
0#
02
b111 (
b11000 ,
b1011 /
b11011 .
b100111011011 )
b0 &
b1110000001110010010011101110100 5
b10110 4
#510
0'
#520
b11 -$
b100 ,$
b0 )$
b10 +$
b10 *$
1C#
b1 x#
b111101101101 n#
b10010000101010010 p#
b10 v#
b1001000010101001011110110110111111110110010101111111011001010111110100111101000000000001111011000101111111111011001010111111101100101011111000011001011001000000011110100111000110010101111111011001010111111101111100 t#
b11010 %
b1 w#
b111101101101000001001000010101001011111110110010101111111011001010x1111111000 B#
b111101101101000001001000010101001011111110110010101111111011001010x1111111000 {#
b1001000010101001011110110110111111110110010101111111011001010111110100111101000000000001111011000101111111111011001010111111101100101011111000011001011001000000011110100111000110010101111111011001010111111101111100 s#
b10 u#
b1 ($
b0 :#
b0 j#
b0 ["
b0 `"
1'
b11101100001110010111101111100101 5
b10111 4
