
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+4052 (git sha1 a58571d0, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: sodor5_bmc.v
Parsing formal SystemVerilog input from `sodor5_bmc.v' to AST representation.
Storing AST representation for module `$abstract\sodor5_verif'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: sodor5_model_ilstype_full.v
Parsing formal SystemVerilog input from `sodor5_model_ilstype_full.v' to AST representation.
Storing AST representation for module `$abstract\sodor5_model'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: sodor5_dmem_top.v
Parsing formal SystemVerilog input from `sodor5_dmem_top.v' to AST representation.
Storing AST representation for module `$abstract\CSRFile'.
Storing AST representation for module `$abstract\Core'.
Storing AST representation for module `$abstract\CoreTop'.
Storing AST representation for module `$abstract\CtlPath'.
Storing AST representation for module `$abstract\DatPath'.
Storing AST representation for module `$abstract\Queue_21'.
Storing AST representation for module `$abstract\Queue_22'.
Storing AST representation for module `$abstract\RegisterFile'.
Storing AST representation for module `$abstract\SimpleDMEM'.
Successfully finished Verilog frontend.

4. Executing PREP pass.

4.1. Executing HIERARCHY pass (managing design hierarchy).

4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\sodor5_verif'.
Generating RTLIL representation for module `\sodor5_verif'.

4.2.1. Analyzing design hierarchy..
Top module:  \sodor5_verif

4.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\sodor5_model'.
Generating RTLIL representation for module `\sodor5_model'.
Warning: Replacing memory \instr_queue_valid with list of registers. See sodor5_model_ilstype_full.v:841, sodor5_model_ilstype_full.v:813
Warning: Replacing memory \instr_queue with list of registers. See sodor5_model_ilstype_full.v:840, sodor5_model_ilstype_full.v:812
Warning: Replacing memory \mem with list of registers. See sodor5_model_ilstype_full.v:803
Warning: Replacing memory \regfile with list of registers. See sodor5_model_ilstype_full.v:1201, sodor5_model_ilstype_full.v:942, sodor5_model_ilstype_full.v:795

4.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\CoreTop'.
Generating RTLIL representation for module `\CoreTop'.

4.2.4. Analyzing design hierarchy..
Top module:  \sodor5_verif
Used module:     \sodor5_model
Used module:     \CoreTop

4.2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\SimpleDMEM'.
